Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 5     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
Rule 6     condition -> ELSE LBRACE bloc RBRACE SEMI
Rule 7     statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 8     statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
Rule 9     statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
Rule 10    statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
Rule 11    statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
Rule 12    statement -> NAME LPAREN RPAREN SEMI
Rule 13    statement -> NAME LPAREN parameters RPAREN SEMI
Rule 14    statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 15    statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 16    return_statement -> RETURN expression SEMI
Rule 17    parameters_function -> NAME COMMA parameters_function
Rule 18    parameters_function -> NAME
Rule 19    parameters -> expression COMMA parameters
Rule 20    parameters -> expression
Rule 21    statement -> NAME EQUAL expression SEMI
Rule 22    statement -> PRINT LPAREN expression_print RPAREN SEMI
Rule 23    expression_print -> expression COMMA expression_print
Rule 24    expression_print -> expression
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression TIMES expression
Rule 28    expression -> expression OR expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression INF expression
Rule 31    expression -> expression SUP expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression EQUALS expression
Rule 34    expression -> LPAREN expression RPAREN
Rule 35    expression -> expression INF NAME INF expression
Rule 36    expression -> expression SUP NAME SUP expression
Rule 37    statement -> NAME PLUSPLUS SEMI
Rule 38    statement -> NAME PLUSEQUAL expression SEMI
Rule 39    expression -> NUMBER
Rule 40    expression -> NAME
Rule 41    statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
Rule 42    statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI
Rule 43    expression -> NAME LBRACKET expression RBRACKET SEMI
Rule 44    array_values -> expression
Rule 45    array_values -> array_values COMMA expression

Terminals, with rules where they appear

AND                  : 29
COMMA                : 17 19 23 45
DIVIDE               : 32
ELSE                 : 6
EQUAL                : 21 41 42
EQUALS               : 33
FOR                  : 8 9
FUNCTION             : 14 15
IF                   : 4 5
INF                  : 30 35 35
LBRACE               : 4 5 6 7 8 9 10 11 14 15
LBRACKET             : 41 41 42 43
LPAREN               : 4 5 7 8 9 10 11 12 13 14 15 22 34
MINUS                : 26
NAME                 : 10 11 12 13 14 15 17 18 21 35 36 37 38 40 41 42 43
NUMBER               : 39
OR                   : 28
PLUS                 : 25
PLUSEQUAL            : 38
PLUSPLUS             : 37
PRINT                : 22
RBRACE               : 4 5 6 7 8 9 10 11 14 15
RBRACKET             : 41 41 42 43
RETURN               : 16
RPAREN               : 4 5 7 8 9 10 11 12 13 14 15 22 34
SEMI                 : 4 6 7 8 8 9 9 10 11 12 13 14 15 16 21 22 37 38 41 42 43
SUP                  : 31 36 36
TIMES                : 27
VOID                 : 10 11
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

array_values         : 41 45
bloc                 : 1 2 4 5 6 7 8 9 10 11 14 15
condition            : 5
expression           : 4 5 7 8 8 9 16 19 20 21 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 35 36 36 38 42 42 43 44 45
expression_print     : 22 23
parameters           : 13 19
parameters_function  : 11 15 17
return_statement     : 14 15
start                : 0
statement            : 2 3 8 9 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    $end            reduce using rule 1 (start -> bloc .)
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement .

    IF              reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    VOID            reduce using rule 3 (bloc -> statement .)
    NAME            reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    RBRACE          reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE condition

    LPAREN          shift and go to state 12


state 5

    (7) statement -> WHILE . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 13


state 6

    (8) statement -> FOR . LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR . LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 14


state 7

    (10) statement -> VOID . NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID . NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    NAME            shift and go to state 15


state 8

    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (21) statement -> NAME . EQUAL expression SEMI
    (37) statement -> NAME . PLUSPLUS SEMI
    (38) statement -> NAME . PLUSEQUAL expression SEMI
    (41) statement -> NAME . LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> NAME . LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 16
    EQUAL           shift and go to state 17
    PLUSPLUS        shift and go to state 18
    PLUSEQUAL       shift and go to state 19
    LBRACKET        shift and go to state 20


state 9

    (14) statement -> FUNCTION . NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION . NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    NAME            shift and go to state 21


state 10

    (22) statement -> PRINT . LPAREN expression_print RPAREN SEMI

    LPAREN          shift and go to state 22


state 11

    (2) bloc -> bloc statement .

    IF              reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    VOID            reduce using rule 2 (bloc -> bloc statement .)
    NAME            reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    RBRACE          reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)


state 12

    (4) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE condition
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 24

state 13

    (7) statement -> WHILE LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 27

state 14

    (8) statement -> FOR LPAREN . statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN . statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 28

state 15

    (10) statement -> VOID NAME . LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME . LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 29


state 16

    (12) statement -> NAME LPAREN . RPAREN SEMI
    (13) statement -> NAME LPAREN . parameters RPAREN SEMI
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    RPAREN          shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    parameters                     shift and go to state 31
    expression                     shift and go to state 32

state 17

    (21) statement -> NAME EQUAL . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 33

state 18

    (37) statement -> NAME PLUSPLUS . SEMI

    SEMI            shift and go to state 34


state 19

    (38) statement -> NAME PLUSEQUAL . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 35

state 20

    (41) statement -> NAME LBRACKET . RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> NAME LBRACKET . expression RBRACKET EQUAL expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    RBRACKET        shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 37

state 21

    (14) statement -> FUNCTION NAME . LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME . LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    LPAREN          shift and go to state 38


state 22

    (22) statement -> PRINT LPAREN . expression_print RPAREN SEMI
    (23) expression_print -> . expression COMMA expression_print
    (24) expression_print -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression_print               shift and go to state 39
    expression                     shift and go to state 40

state 23

    (34) expression -> LPAREN . expression RPAREN
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 41

state 24

    (4) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE condition
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 25

    (40) expression -> NAME .
    (43) expression -> NAME . LBRACKET expression RBRACKET SEMI

    RPAREN          reduce using rule 40 (expression -> NAME .)
    PLUS            reduce using rule 40 (expression -> NAME .)
    MINUS           reduce using rule 40 (expression -> NAME .)
    TIMES           reduce using rule 40 (expression -> NAME .)
    OR              reduce using rule 40 (expression -> NAME .)
    AND             reduce using rule 40 (expression -> NAME .)
    INF             reduce using rule 40 (expression -> NAME .)
    SUP             reduce using rule 40 (expression -> NAME .)
    DIVIDE          reduce using rule 40 (expression -> NAME .)
    EQUALS          reduce using rule 40 (expression -> NAME .)
    COMMA           reduce using rule 40 (expression -> NAME .)
    SEMI            reduce using rule 40 (expression -> NAME .)
    RBRACKET        reduce using rule 40 (expression -> NAME .)
    LBRACKET        shift and go to state 52


state 26

    (39) expression -> NUMBER .

    RPAREN          reduce using rule 39 (expression -> NUMBER .)
    PLUS            reduce using rule 39 (expression -> NUMBER .)
    MINUS           reduce using rule 39 (expression -> NUMBER .)
    TIMES           reduce using rule 39 (expression -> NUMBER .)
    OR              reduce using rule 39 (expression -> NUMBER .)
    AND             reduce using rule 39 (expression -> NUMBER .)
    INF             reduce using rule 39 (expression -> NUMBER .)
    SUP             reduce using rule 39 (expression -> NUMBER .)
    DIVIDE          reduce using rule 39 (expression -> NUMBER .)
    EQUALS          reduce using rule 39 (expression -> NUMBER .)
    COMMA           reduce using rule 39 (expression -> NUMBER .)
    SEMI            reduce using rule 39 (expression -> NUMBER .)
    RBRACKET        reduce using rule 39 (expression -> NUMBER .)


state 27

    (7) statement -> WHILE LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 28

    (8) statement -> FOR LPAREN statement . expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement . expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 54

state 29

    (10) statement -> VOID NAME LPAREN . RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME LPAREN . parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 56
    NAME            shift and go to state 55

    parameters_function            shift and go to state 57

state 30

    (12) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 58


state 31

    (13) statement -> NAME LPAREN parameters . RPAREN SEMI

    RPAREN          shift and go to state 59


state 32

    (19) parameters -> expression . COMMA parameters
    (20) parameters -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 60
    RPAREN          reduce using rule 20 (parameters -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 33

    (21) statement -> NAME EQUAL expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 61
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 34

    (37) statement -> NAME PLUSPLUS SEMI .

    IF              reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    WHILE           reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    FOR             reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    VOID            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    NAME            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    FUNCTION        reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    PRINT           reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    $end            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    LPAREN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    NUMBER          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RBRACE          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RPAREN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RETURN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)


state 35

    (38) statement -> NAME PLUSEQUAL expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 62
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 36

    (41) statement -> NAME LBRACKET RBRACKET . EQUAL LBRACKET array_values RBRACKET SEMI

    EQUAL           shift and go to state 63


state 37

    (42) statement -> NAME LBRACKET expression . RBRACKET EQUAL expression SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 64
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 38

    (14) statement -> FUNCTION NAME LPAREN . RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME LPAREN . parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 65
    NAME            shift and go to state 55

    parameters_function            shift and go to state 66

state 39

    (22) statement -> PRINT LPAREN expression_print . RPAREN SEMI

    RPAREN          shift and go to state 67


state 40

    (23) expression_print -> expression . COMMA expression_print
    (24) expression_print -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 68
    RPAREN          reduce using rule 24 (expression_print -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 41

    (34) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 42

    (4) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE condition

    LBRACE          shift and go to state 70


state 43

    (25) expression -> expression PLUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 71

state 44

    (26) expression -> expression MINUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 72

state 45

    (27) expression -> expression TIMES . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 73

state 46

    (28) expression -> expression OR . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 74

state 47

    (29) expression -> expression AND . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 75

state 48

    (30) expression -> expression INF . expression
    (35) expression -> expression INF . NAME INF expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    NAME            shift and go to state 77
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26

    expression                     shift and go to state 76

state 49

    (31) expression -> expression SUP . expression
    (36) expression -> expression SUP . NAME SUP expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    NAME            shift and go to state 79
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26

    expression                     shift and go to state 78

state 50

    (32) expression -> expression DIVIDE . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 80

state 51

    (33) expression -> expression EQUALS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 81

state 52

    (43) expression -> NAME LBRACKET . expression RBRACKET SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 82

state 53

    (7) statement -> WHILE LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 83


state 54

    (8) statement -> FOR LPAREN statement expression . SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression . SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 84
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 55

    (17) parameters_function -> NAME . COMMA parameters_function
    (18) parameters_function -> NAME .

    COMMA           shift and go to state 85
    RPAREN          reduce using rule 18 (parameters_function -> NAME .)


state 56

    (10) statement -> VOID NAME LPAREN RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 86


state 57

    (11) statement -> VOID NAME LPAREN parameters_function . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 87


state 58

    (12) statement -> NAME LPAREN RPAREN SEMI .

    IF              reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    VOID            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NAME            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)


state 59

    (13) statement -> NAME LPAREN parameters RPAREN . SEMI

    SEMI            shift and go to state 88


state 60

    (19) parameters -> expression COMMA . parameters
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 32
    parameters                     shift and go to state 89

state 61

    (21) statement -> NAME EQUAL expression SEMI .

    IF              reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    WHILE           reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    FOR             reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    VOID            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    NAME            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    FUNCTION        reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    PRINT           reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    $end            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    LPAREN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    NUMBER          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RBRACE          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RPAREN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RETURN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)


state 62

    (38) statement -> NAME PLUSEQUAL expression SEMI .

    IF              reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    WHILE           reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    FOR             reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    VOID            reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    NAME            reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    FUNCTION        reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    PRINT           reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    $end            reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    LPAREN          reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    NUMBER          reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    RBRACE          reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    RPAREN          reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)
    RETURN          reduce using rule 38 (statement -> NAME PLUSEQUAL expression SEMI .)


state 63

    (41) statement -> NAME LBRACKET RBRACKET EQUAL . LBRACKET array_values RBRACKET SEMI

    LBRACKET        shift and go to state 90


state 64

    (42) statement -> NAME LBRACKET expression RBRACKET . EQUAL expression SEMI

    EQUAL           shift and go to state 91


state 65

    (14) statement -> FUNCTION NAME LPAREN RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 92


state 66

    (15) statement -> FUNCTION NAME LPAREN parameters_function . RPAREN LBRACE bloc return_statement RBRACE SEMI

    RPAREN          shift and go to state 93


state 67

    (22) statement -> PRINT LPAREN expression_print RPAREN . SEMI

    SEMI            shift and go to state 94


state 68

    (23) expression_print -> expression COMMA . expression_print
    (23) expression_print -> . expression COMMA expression_print
    (24) expression_print -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 40
    expression_print               shift and go to state 95

state 69

    (34) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 34 (expression -> LPAREN expression RPAREN .)


state 70

    (4) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE condition
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 96
    statement                      shift and go to state 3

state 71

    (25) expression -> expression PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 25 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    OR              reduce using rule 25 (expression -> expression PLUS expression .)
    AND             reduce using rule 25 (expression -> expression PLUS expression .)
    INF             reduce using rule 25 (expression -> expression PLUS expression .)
    SUP             reduce using rule 25 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 25 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 25 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 25 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 25 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50

  ! TIMES           [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 51 ]


state 72

    (26) expression -> expression MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 26 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    OR              reduce using rule 26 (expression -> expression MINUS expression .)
    AND             reduce using rule 26 (expression -> expression MINUS expression .)
    INF             reduce using rule 26 (expression -> expression MINUS expression .)
    SUP             reduce using rule 26 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 26 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 26 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 26 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 26 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50

  ! TIMES           [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 51 ]


state 73

    (27) expression -> expression TIMES expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 27 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 27 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 27 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 27 (expression -> expression TIMES expression .)
    OR              reduce using rule 27 (expression -> expression TIMES expression .)
    AND             reduce using rule 27 (expression -> expression TIMES expression .)
    INF             reduce using rule 27 (expression -> expression TIMES expression .)
    SUP             reduce using rule 27 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 27 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 27 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 27 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 27 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 27 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EQUALS          [ shift and go to state 51 ]


state 74

    (28) expression -> expression OR expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 28 (expression -> expression OR expression .)
    OR              reduce using rule 28 (expression -> expression OR expression .)
    AND             reduce using rule 28 (expression -> expression OR expression .)
    EQUALS          reduce using rule 28 (expression -> expression OR expression .)
    COMMA           reduce using rule 28 (expression -> expression OR expression .)
    SEMI            reduce using rule 28 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 28 (expression -> expression OR expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50

  ! PLUS            [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 75

    (29) expression -> expression AND expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    OR              reduce using rule 29 (expression -> expression AND expression .)
    AND             reduce using rule 29 (expression -> expression AND expression .)
    EQUALS          reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    SEMI            reduce using rule 29 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 29 (expression -> expression AND expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50

  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 76

    (30) expression -> expression INF expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 30 (expression -> expression INF expression .)
    OR              reduce using rule 30 (expression -> expression INF expression .)
    AND             reduce using rule 30 (expression -> expression INF expression .)
    EQUALS          reduce using rule 30 (expression -> expression INF expression .)
    COMMA           reduce using rule 30 (expression -> expression INF expression .)
    SEMI            reduce using rule 30 (expression -> expression INF expression .)
    RBRACKET        reduce using rule 30 (expression -> expression INF expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50
    INF             shift and go to state 48
    SUP             shift and go to state 49

  ! PLUS            [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 77

    (35) expression -> expression INF NAME . INF expression
    (40) expression -> NAME .
    (43) expression -> NAME . LBRACKET expression RBRACKET SEMI

  ! shift/reduce conflict for INF resolved as shift
    INF             shift and go to state 97
    PLUS            reduce using rule 40 (expression -> NAME .)
    MINUS           reduce using rule 40 (expression -> NAME .)
    TIMES           reduce using rule 40 (expression -> NAME .)
    OR              reduce using rule 40 (expression -> NAME .)
    AND             reduce using rule 40 (expression -> NAME .)
    SUP             reduce using rule 40 (expression -> NAME .)
    DIVIDE          reduce using rule 40 (expression -> NAME .)
    EQUALS          reduce using rule 40 (expression -> NAME .)
    RPAREN          reduce using rule 40 (expression -> NAME .)
    COMMA           reduce using rule 40 (expression -> NAME .)
    SEMI            reduce using rule 40 (expression -> NAME .)
    RBRACKET        reduce using rule 40 (expression -> NAME .)
    LBRACKET        shift and go to state 52

  ! INF             [ reduce using rule 40 (expression -> NAME .) ]


state 78

    (31) expression -> expression SUP expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 31 (expression -> expression SUP expression .)
    OR              reduce using rule 31 (expression -> expression SUP expression .)
    AND             reduce using rule 31 (expression -> expression SUP expression .)
    EQUALS          reduce using rule 31 (expression -> expression SUP expression .)
    COMMA           reduce using rule 31 (expression -> expression SUP expression .)
    SEMI            reduce using rule 31 (expression -> expression SUP expression .)
    RBRACKET        reduce using rule 31 (expression -> expression SUP expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50
    INF             shift and go to state 48
    SUP             shift and go to state 49

  ! PLUS            [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 79

    (36) expression -> expression SUP NAME . SUP expression
    (40) expression -> NAME .
    (43) expression -> NAME . LBRACKET expression RBRACKET SEMI

  ! shift/reduce conflict for SUP resolved as shift
    SUP             shift and go to state 98
    PLUS            reduce using rule 40 (expression -> NAME .)
    MINUS           reduce using rule 40 (expression -> NAME .)
    TIMES           reduce using rule 40 (expression -> NAME .)
    OR              reduce using rule 40 (expression -> NAME .)
    AND             reduce using rule 40 (expression -> NAME .)
    INF             reduce using rule 40 (expression -> NAME .)
    DIVIDE          reduce using rule 40 (expression -> NAME .)
    EQUALS          reduce using rule 40 (expression -> NAME .)
    RPAREN          reduce using rule 40 (expression -> NAME .)
    COMMA           reduce using rule 40 (expression -> NAME .)
    SEMI            reduce using rule 40 (expression -> NAME .)
    RBRACKET        reduce using rule 40 (expression -> NAME .)
    LBRACKET        shift and go to state 52

  ! SUP             [ reduce using rule 40 (expression -> NAME .) ]


state 80

    (32) expression -> expression DIVIDE expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 32 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 32 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 32 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 32 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 32 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EQUALS          [ shift and go to state 51 ]


state 81

    (33) expression -> expression EQUALS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 33 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 33 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 33 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 33 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51

  ! PLUS            [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]


state 82

    (43) expression -> NAME LBRACKET expression . RBRACKET SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 99
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 83

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 100
    statement                      shift and go to state 3

state 84

    (8) statement -> FOR LPAREN statement expression SEMI . expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression SEMI . statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 103
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 101
    expression                     shift and go to state 102

state 85

    (17) parameters_function -> NAME COMMA . parameters_function
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    NAME            shift and go to state 55

    parameters_function            shift and go to state 104

state 86

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 105
    statement                      shift and go to state 3

state 87

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 106


state 88

    (13) statement -> NAME LPAREN parameters RPAREN SEMI .

    IF              reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    VOID            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NAME            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RBRACE          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)


state 89

    (19) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 19 (parameters -> expression COMMA parameters .)


state 90

    (41) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET . array_values RBRACKET SEMI
    (44) array_values -> . expression
    (45) array_values -> . array_values COMMA expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    array_values                   shift and go to state 107
    expression                     shift and go to state 108

state 91

    (42) statement -> NAME LBRACKET expression RBRACKET EQUAL . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 109

state 92

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 110
    statement                      shift and go to state 3

state 93

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 111


state 94

    (22) statement -> PRINT LPAREN expression_print RPAREN SEMI .

    IF              reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    WHILE           reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FOR             reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    VOID            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NAME            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FUNCTION        reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    PRINT           reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    $end            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    LPAREN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NUMBER          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RBRACE          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RPAREN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RETURN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)


state 95

    (23) expression_print -> expression COMMA expression_print .

    RPAREN          reduce using rule 23 (expression_print -> expression COMMA expression_print .)


state 96

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE condition
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 112
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 97

    (35) expression -> expression INF NAME INF . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 113

state 98

    (36) expression -> expression SUP NAME SUP . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 114

state 99

    (43) expression -> NAME LBRACKET expression RBRACKET . SEMI

    SEMI            shift and go to state 115


state 100

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 116
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 101

    (9) statement -> FOR LPAREN statement expression SEMI statement . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 117


state 102

    (8) statement -> FOR LPAREN statement expression SEMI expression . RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 118
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 103

    (40) expression -> NAME .
    (43) expression -> NAME . LBRACKET expression RBRACKET SEMI
    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (21) statement -> NAME . EQUAL expression SEMI
    (37) statement -> NAME . PLUSPLUS SEMI
    (38) statement -> NAME . PLUSEQUAL expression SEMI
    (41) statement -> NAME . LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> NAME . LBRACKET expression RBRACKET EQUAL expression SEMI

    RPAREN          reduce using rule 40 (expression -> NAME .)
    PLUS            reduce using rule 40 (expression -> NAME .)
    MINUS           reduce using rule 40 (expression -> NAME .)
    TIMES           reduce using rule 40 (expression -> NAME .)
    OR              reduce using rule 40 (expression -> NAME .)
    AND             reduce using rule 40 (expression -> NAME .)
    INF             reduce using rule 40 (expression -> NAME .)
    SUP             reduce using rule 40 (expression -> NAME .)
    DIVIDE          reduce using rule 40 (expression -> NAME .)
    EQUALS          reduce using rule 40 (expression -> NAME .)
    LBRACKET        shift and go to state 119
    LPAREN          shift and go to state 16
    EQUAL           shift and go to state 17
    PLUSPLUS        shift and go to state 18
    PLUSEQUAL       shift and go to state 19


state 104

    (17) parameters_function -> NAME COMMA parameters_function .

    RPAREN          reduce using rule 17 (parameters_function -> NAME COMMA parameters_function .)


state 105

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 120
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 106

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 121
    statement                      shift and go to state 3

state 107

    (41) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values . RBRACKET SEMI
    (45) array_values -> array_values . COMMA expression

    RBRACKET        shift and go to state 122
    COMMA           shift and go to state 123


state 108

    (44) array_values -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RBRACKET        reduce using rule 44 (array_values -> expression .)
    COMMA           reduce using rule 44 (array_values -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 109

    (42) statement -> NAME LBRACKET expression RBRACKET EQUAL expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 124
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 110

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RETURN          shift and go to state 126
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 125
    statement                      shift and go to state 11

state 111

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 127
    statement                      shift and go to state 3

state 112

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . condition
    (6) condition -> . ELSE LBRACE bloc RBRACE SEMI

    SEMI            shift and go to state 128
    ELSE            shift and go to state 130

    condition                      shift and go to state 129

state 113

    (35) expression -> expression INF NAME INF expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 35 (expression -> expression INF NAME INF expression .)
    OR              reduce using rule 35 (expression -> expression INF NAME INF expression .)
    AND             reduce using rule 35 (expression -> expression INF NAME INF expression .)
    EQUALS          reduce using rule 35 (expression -> expression INF NAME INF expression .)
    COMMA           reduce using rule 35 (expression -> expression INF NAME INF expression .)
    SEMI            reduce using rule 35 (expression -> expression INF NAME INF expression .)
    RBRACKET        reduce using rule 35 (expression -> expression INF NAME INF expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50
    INF             shift and go to state 48
    SUP             shift and go to state 49

  ! PLUS            [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! INF             [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! SUP             [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 114

    (36) expression -> expression SUP NAME SUP expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    OR              reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    AND             reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    EQUALS          reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    COMMA           reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    SEMI            reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    RBRACKET        reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 50
    INF             shift and go to state 48
    SUP             shift and go to state 49

  ! PLUS            [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! INF             [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! SUP             [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! OR              [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 51 ]


state 115

    (43) expression -> NAME LBRACKET expression RBRACKET SEMI .

    RPAREN          reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    PLUS            reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    MINUS           reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    TIMES           reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    OR              reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    AND             reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    INF             reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    SUP             reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    DIVIDE          reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    EQUALS          reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    COMMA           reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    SEMI            reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)
    RBRACKET        reduce using rule 43 (expression -> NAME LBRACKET expression RBRACKET SEMI .)


state 116

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 131


state 117

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 132


state 118

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 133


state 119

    (43) expression -> NAME LBRACKET . expression RBRACKET SEMI
    (41) statement -> NAME LBRACKET . RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> NAME LBRACKET . expression RBRACKET EQUAL expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    RBRACKET        shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 134

state 120

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 135


state 121

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 136
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 122

    (41) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET . SEMI

    SEMI            shift and go to state 137


state 123

    (45) array_values -> array_values COMMA . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 138

state 124

    (42) statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .

    IF              reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    WHILE           reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    FOR             reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    VOID            reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    NAME            reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    FUNCTION        reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    PRINT           reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    $end            reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    LPAREN          reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    NUMBER          reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RBRACE          reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RPAREN          reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RETURN          reduce using rule 42 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)


state 125

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 139


state 126

    (16) return_statement -> RETURN . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (39) expression -> . NUMBER
    (40) expression -> . NAME
    (43) expression -> . NAME LBRACKET expression RBRACKET SEMI

    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 26
    NAME            shift and go to state 25

    expression                     shift and go to state 140

state 127

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RETURN          shift and go to state 126
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 141
    statement                      shift and go to state 11

state 128

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 129

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .

    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    VOID            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NAME            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FUNCTION        reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    $end            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RETURN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)


state 130

    (6) condition -> ELSE . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 142


state 131

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 132

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 143

state 133

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 144

state 134

    (43) expression -> NAME LBRACKET expression . RBRACKET SEMI
    (42) statement -> NAME LBRACKET expression . RBRACKET EQUAL expression SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 145
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 135

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)


state 136

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 146


state 137

    (41) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .

    IF              reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    WHILE           reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    FOR             reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    VOID            reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    NAME            reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    FUNCTION        reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    PRINT           reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    $end            reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    LPAREN          reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    NUMBER          reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RBRACE          reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RPAREN          reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RETURN          reduce using rule 41 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)


state 138

    (45) array_values -> array_values COMMA expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RBRACKET        reduce using rule 45 (array_values -> array_values COMMA expression .)
    COMMA           reduce using rule 45 (array_values -> array_values COMMA expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 139

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 147


state 140

    (16) return_statement -> RETURN expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 148
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    OR              shift and go to state 46
    AND             shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALS          shift and go to state 51


state 141

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 149


state 142

    (6) condition -> ELSE LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 150
    statement                      shift and go to state 3

state 143

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 151
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 144

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 152
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 145

    (43) expression -> NAME LBRACKET expression RBRACKET . SEMI
    (42) statement -> NAME LBRACKET expression RBRACKET . EQUAL expression SEMI

    SEMI            shift and go to state 115
    EQUAL           shift and go to state 91


state 146

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)


state 147

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .

    IF              reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    $end            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 148

    (16) return_statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 16 (return_statement -> RETURN expression SEMI .)


state 149

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 153


state 150

    (6) condition -> ELSE LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI
    (38) statement -> . NAME PLUSEQUAL expression SEMI
    (41) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (42) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 154
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 151

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 155


state 152

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 156


state 153

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .

    IF              reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    $end            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 154

    (6) condition -> ELSE LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 157


state 155

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)


state 156

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)


state 157

    (6) condition -> ELSE LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INF in state 77 resolved as shift
WARNING: shift/reduce conflict for SUP in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for INF in state 81 resolved as shift
WARNING: shift/reduce conflict for SUP in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 81 resolved as shift
