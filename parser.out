Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc function_main
Rule 2     start -> function_main
Rule 3     bloc -> bloc statement
Rule 4     bloc -> statement
Rule 5     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 6     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
Rule 7     condition -> ELSE LBRACE bloc RBRACE SEMI
Rule 8     statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 9     statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
Rule 10    statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
Rule 11    statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
Rule 12    statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
Rule 13    statement -> NAME LPAREN RPAREN SEMI
Rule 14    statement -> NAME LPAREN parameters RPAREN SEMI
Rule 15    statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 16    statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 17    return_statement -> RETURN expression SEMI
Rule 18    parameters_function -> NAME COMMA parameters_function
Rule 19    parameters_function -> NAME
Rule 20    parameters -> expression COMMA parameters
Rule 21    parameters -> expression
Rule 22    function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE
Rule 23    statement -> NAME EQUAL expression SEMI
Rule 24    statement -> NAME EQUAL statement
Rule 25    statement -> PRINT LPAREN expression_print RPAREN SEMI
Rule 26    expression_print -> expression COMMA expression_print
Rule 27    expression_print -> expression
Rule 28    expression_print -> statement COMMA expression_print
Rule 29    expression_print -> statement
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression OR expression
Rule 34    expression -> expression AND expression
Rule 35    expression -> expression INF expression
Rule 36    expression -> expression SUP expression
Rule 37    expression -> expression DIVIDE expression
Rule 38    expression -> expression EQUALS expression
Rule 39    expression -> LPAREN expression RPAREN
Rule 40    expression -> expression INF NAME INF expression
Rule 41    expression -> expression SUP NAME SUP expression
Rule 42    statement -> NAME PLUSPLUS SEMI
Rule 43    statement -> NAME PLUSEQUAL expression SEMI
Rule 44    expression -> NUMBER
Rule 45    expression -> NAME
Rule 46    statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
Rule 47    statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI
Rule 48    expression -> NAME LBRACKET expression RBRACKET
Rule 49    array_values -> expression
Rule 50    array_values -> array_values COMMA expression

Terminals, with rules where they appear

AND                  : 34
COMMA                : 18 20 26 28 50
DIVIDE               : 37
ELSE                 : 7
EQUAL                : 23 24 46 47
EQUALS               : 38
FOR                  : 9 10
FUNCTION             : 15 16
IF                   : 5 6
INF                  : 35 40 40
LBRACE               : 5 6 7 8 9 10 11 12 15 16 22
LBRACKET             : 46 46 47 48
LPAREN               : 5 6 8 9 10 11 12 13 14 15 16 22 25 39
MAIN                 : 22
MINUS                : 31
NAME                 : 11 12 13 14 15 16 18 19 23 24 40 41 42 43 45 46 47 48
NUMBER               : 44
OR                   : 33
PLUS                 : 30
PLUSEQUAL            : 43
PLUSPLUS             : 42
PRINT                : 25
RBRACE               : 5 6 7 8 9 10 11 12 15 16 22
RBRACKET             : 46 46 47 48
RETURN               : 17
RPAREN               : 5 6 8 9 10 11 12 13 14 15 16 22 25 39
SEMI                 : 5 7 8 9 9 10 10 11 12 13 14 15 16 17 23 25 42 43 46 47
SUP                  : 36 41 41
TIMES                : 32
VOID                 : 11 12
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

array_values         : 46 50
bloc                 : 1 3 5 6 7 8 9 10 11 12 15 16 22
condition            : 6
expression           : 5 6 8 9 9 10 17 20 21 23 26 27 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 40 41 41 43 47 47 48 49 50
expression_print     : 25 26 28
function_main        : 1 2
parameters           : 14 20
parameters_function  : 12 16 18
return_statement     : 15 16
start                : 0
statement            : 3 4 9 10 10 24 28 29

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc function_main
    (2) start -> . function_main
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (22) function_main -> . MAIN LPAREN RPAREN LBRACE bloc RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    MAIN            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    function_main                  shift and go to state 3
    statement                      shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc . function_main
    (3) bloc -> bloc . statement
    (22) function_main -> . MAIN LPAREN RPAREN LBRACE bloc RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    MAIN            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    function_main                  shift and go to state 13
    statement                      shift and go to state 14

state 3

    (2) start -> function_main .

    $end            reduce using rule 2 (start -> function_main .)


state 4

    (4) bloc -> statement .

    MAIN            reduce using rule 4 (bloc -> statement .)
    IF              reduce using rule 4 (bloc -> statement .)
    WHILE           reduce using rule 4 (bloc -> statement .)
    FOR             reduce using rule 4 (bloc -> statement .)
    VOID            reduce using rule 4 (bloc -> statement .)
    NAME            reduce using rule 4 (bloc -> statement .)
    FUNCTION        reduce using rule 4 (bloc -> statement .)
    PRINT           reduce using rule 4 (bloc -> statement .)
    RBRACE          reduce using rule 4 (bloc -> statement .)
    RETURN          reduce using rule 4 (bloc -> statement .)


state 5

    (22) function_main -> MAIN . LPAREN RPAREN LBRACE bloc RBRACE

    LPAREN          shift and go to state 15


state 6

    (5) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE condition

    LPAREN          shift and go to state 16


state 7

    (8) statement -> WHILE . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 17


state 8

    (9) statement -> FOR . LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> FOR . LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 18


state 9

    (11) statement -> VOID . NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> VOID . NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    NAME            shift and go to state 19


state 10

    (13) statement -> NAME . LPAREN RPAREN SEMI
    (14) statement -> NAME . LPAREN parameters RPAREN SEMI
    (23) statement -> NAME . EQUAL expression SEMI
    (24) statement -> NAME . EQUAL statement
    (42) statement -> NAME . PLUSPLUS SEMI
    (43) statement -> NAME . PLUSEQUAL expression SEMI
    (46) statement -> NAME . LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> NAME . LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 20
    EQUAL           shift and go to state 21
    PLUSPLUS        shift and go to state 22
    PLUSEQUAL       shift and go to state 23
    LBRACKET        shift and go to state 24


state 11

    (15) statement -> FUNCTION . NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> FUNCTION . NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    NAME            shift and go to state 25


state 12

    (25) statement -> PRINT . LPAREN expression_print RPAREN SEMI

    LPAREN          shift and go to state 26


state 13

    (1) start -> bloc function_main .

    $end            reduce using rule 1 (start -> bloc function_main .)


state 14

    (3) bloc -> bloc statement .

    MAIN            reduce using rule 3 (bloc -> bloc statement .)
    IF              reduce using rule 3 (bloc -> bloc statement .)
    WHILE           reduce using rule 3 (bloc -> bloc statement .)
    FOR             reduce using rule 3 (bloc -> bloc statement .)
    VOID            reduce using rule 3 (bloc -> bloc statement .)
    NAME            reduce using rule 3 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 3 (bloc -> bloc statement .)
    PRINT           reduce using rule 3 (bloc -> bloc statement .)
    RBRACE          reduce using rule 3 (bloc -> bloc statement .)
    RETURN          reduce using rule 3 (bloc -> bloc statement .)


state 15

    (22) function_main -> MAIN LPAREN . RPAREN LBRACE bloc RBRACE

    RPAREN          shift and go to state 27


state 16

    (5) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE condition
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 29

state 17

    (8) statement -> WHILE LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 32

state 18

    (9) statement -> FOR LPAREN . statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> FOR LPAREN . statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 33

state 19

    (11) statement -> VOID NAME . LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> VOID NAME . LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 34


state 20

    (13) statement -> NAME LPAREN . RPAREN SEMI
    (14) statement -> NAME LPAREN . parameters RPAREN SEMI
    (20) parameters -> . expression COMMA parameters
    (21) parameters -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    RPAREN          shift and go to state 35
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    parameters                     shift and go to state 36
    expression                     shift and go to state 37

state 21

    (23) statement -> NAME EQUAL . expression SEMI
    (24) statement -> NAME EQUAL . statement
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 38
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    expression                     shift and go to state 39
    statement                      shift and go to state 40

state 22

    (42) statement -> NAME PLUSPLUS . SEMI

    SEMI            shift and go to state 41


state 23

    (43) statement -> NAME PLUSEQUAL . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 42

state 24

    (46) statement -> NAME LBRACKET . RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> NAME LBRACKET . expression RBRACKET EQUAL expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 43
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 44

state 25

    (15) statement -> FUNCTION NAME . LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> FUNCTION NAME . LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    LPAREN          shift and go to state 45


state 26

    (25) statement -> PRINT LPAREN . expression_print RPAREN SEMI
    (26) expression_print -> . expression COMMA expression_print
    (27) expression_print -> . expression
    (28) expression_print -> . statement COMMA expression_print
    (29) expression_print -> . statement
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 38
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    expression_print               shift and go to state 46
    expression                     shift and go to state 47
    statement                      shift and go to state 48

state 27

    (22) function_main -> MAIN LPAREN RPAREN . LBRACE bloc RBRACE

    LBRACE          shift and go to state 49


state 28

    (39) expression -> LPAREN . expression RPAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 50

state 29

    (5) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE condition
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 30

    (45) expression -> NAME .
    (48) expression -> NAME . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 45 (expression -> NAME .)
    PLUS            reduce using rule 45 (expression -> NAME .)
    MINUS           reduce using rule 45 (expression -> NAME .)
    TIMES           reduce using rule 45 (expression -> NAME .)
    OR              reduce using rule 45 (expression -> NAME .)
    AND             reduce using rule 45 (expression -> NAME .)
    INF             reduce using rule 45 (expression -> NAME .)
    SUP             reduce using rule 45 (expression -> NAME .)
    DIVIDE          reduce using rule 45 (expression -> NAME .)
    EQUALS          reduce using rule 45 (expression -> NAME .)
    COMMA           reduce using rule 45 (expression -> NAME .)
    SEMI            reduce using rule 45 (expression -> NAME .)
    RBRACKET        reduce using rule 45 (expression -> NAME .)
    LBRACKET        shift and go to state 61


state 31

    (44) expression -> NUMBER .

    RPAREN          reduce using rule 44 (expression -> NUMBER .)
    PLUS            reduce using rule 44 (expression -> NUMBER .)
    MINUS           reduce using rule 44 (expression -> NUMBER .)
    TIMES           reduce using rule 44 (expression -> NUMBER .)
    OR              reduce using rule 44 (expression -> NUMBER .)
    AND             reduce using rule 44 (expression -> NUMBER .)
    INF             reduce using rule 44 (expression -> NUMBER .)
    SUP             reduce using rule 44 (expression -> NUMBER .)
    DIVIDE          reduce using rule 44 (expression -> NUMBER .)
    EQUALS          reduce using rule 44 (expression -> NUMBER .)
    COMMA           reduce using rule 44 (expression -> NUMBER .)
    SEMI            reduce using rule 44 (expression -> NUMBER .)
    RBRACKET        reduce using rule 44 (expression -> NUMBER .)


state 32

    (8) statement -> WHILE LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 33

    (9) statement -> FOR LPAREN statement . expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> FOR LPAREN statement . expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 63

state 34

    (11) statement -> VOID NAME LPAREN . RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> VOID NAME LPAREN . parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (18) parameters_function -> . NAME COMMA parameters_function
    (19) parameters_function -> . NAME

    RPAREN          shift and go to state 65
    NAME            shift and go to state 64

    parameters_function            shift and go to state 66

state 35

    (13) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 67


state 36

    (14) statement -> NAME LPAREN parameters . RPAREN SEMI

    RPAREN          shift and go to state 68


state 37

    (20) parameters -> expression . COMMA parameters
    (21) parameters -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 69
    RPAREN          reduce using rule 21 (parameters -> expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 38

    (45) expression -> NAME .
    (48) expression -> NAME . LBRACKET expression RBRACKET
    (13) statement -> NAME . LPAREN RPAREN SEMI
    (14) statement -> NAME . LPAREN parameters RPAREN SEMI
    (23) statement -> NAME . EQUAL expression SEMI
    (24) statement -> NAME . EQUAL statement
    (42) statement -> NAME . PLUSPLUS SEMI
    (43) statement -> NAME . PLUSEQUAL expression SEMI
    (46) statement -> NAME . LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> NAME . LBRACKET expression RBRACKET EQUAL expression SEMI

    SEMI            reduce using rule 45 (expression -> NAME .)
    PLUS            reduce using rule 45 (expression -> NAME .)
    MINUS           reduce using rule 45 (expression -> NAME .)
    TIMES           reduce using rule 45 (expression -> NAME .)
    OR              reduce using rule 45 (expression -> NAME .)
    AND             reduce using rule 45 (expression -> NAME .)
    INF             reduce using rule 45 (expression -> NAME .)
    SUP             reduce using rule 45 (expression -> NAME .)
    DIVIDE          reduce using rule 45 (expression -> NAME .)
    EQUALS          reduce using rule 45 (expression -> NAME .)
    COMMA           reduce using rule 45 (expression -> NAME .)
    RPAREN          reduce using rule 45 (expression -> NAME .)
    LBRACKET        shift and go to state 70
    LPAREN          shift and go to state 20
    EQUAL           shift and go to state 21
    PLUSPLUS        shift and go to state 22
    PLUSEQUAL       shift and go to state 23


state 39

    (23) statement -> NAME EQUAL expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 71
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 40

    (24) statement -> NAME EQUAL statement .

    MAIN            reduce using rule 24 (statement -> NAME EQUAL statement .)
    IF              reduce using rule 24 (statement -> NAME EQUAL statement .)
    WHILE           reduce using rule 24 (statement -> NAME EQUAL statement .)
    FOR             reduce using rule 24 (statement -> NAME EQUAL statement .)
    VOID            reduce using rule 24 (statement -> NAME EQUAL statement .)
    NAME            reduce using rule 24 (statement -> NAME EQUAL statement .)
    FUNCTION        reduce using rule 24 (statement -> NAME EQUAL statement .)
    PRINT           reduce using rule 24 (statement -> NAME EQUAL statement .)
    LPAREN          reduce using rule 24 (statement -> NAME EQUAL statement .)
    NUMBER          reduce using rule 24 (statement -> NAME EQUAL statement .)
    COMMA           reduce using rule 24 (statement -> NAME EQUAL statement .)
    RPAREN          reduce using rule 24 (statement -> NAME EQUAL statement .)
    RBRACE          reduce using rule 24 (statement -> NAME EQUAL statement .)
    RETURN          reduce using rule 24 (statement -> NAME EQUAL statement .)


state 41

    (42) statement -> NAME PLUSPLUS SEMI .

    MAIN            reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    IF              reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    WHILE           reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    FOR             reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    VOID            reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    NAME            reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    FUNCTION        reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    PRINT           reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    LPAREN          reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    NUMBER          reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    COMMA           reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    RPAREN          reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    RBRACE          reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)
    RETURN          reduce using rule 42 (statement -> NAME PLUSPLUS SEMI .)


state 42

    (43) statement -> NAME PLUSEQUAL expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 72
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 43

    (46) statement -> NAME LBRACKET RBRACKET . EQUAL LBRACKET array_values RBRACKET SEMI

    EQUAL           shift and go to state 73


state 44

    (47) statement -> NAME LBRACKET expression . RBRACKET EQUAL expression SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 74
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 45

    (15) statement -> FUNCTION NAME LPAREN . RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> FUNCTION NAME LPAREN . parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (18) parameters_function -> . NAME COMMA parameters_function
    (19) parameters_function -> . NAME

    RPAREN          shift and go to state 75
    NAME            shift and go to state 64

    parameters_function            shift and go to state 76

state 46

    (25) statement -> PRINT LPAREN expression_print . RPAREN SEMI

    RPAREN          shift and go to state 77


state 47

    (26) expression_print -> expression . COMMA expression_print
    (27) expression_print -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 78
    RPAREN          reduce using rule 27 (expression_print -> expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 48

    (28) expression_print -> statement . COMMA expression_print
    (29) expression_print -> statement .

    COMMA           shift and go to state 79
    RPAREN          reduce using rule 29 (expression_print -> statement .)


state 49

    (22) function_main -> MAIN LPAREN RPAREN LBRACE . bloc RBRACE
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 80
    statement                      shift and go to state 4

state 50

    (39) expression -> LPAREN expression . RPAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 81
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 51

    (5) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI
    (6) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE condition

    LBRACE          shift and go to state 82


state 52

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 83

state 53

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 84

state 54

    (32) expression -> expression TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 85

state 55

    (33) expression -> expression OR . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 86

state 56

    (34) expression -> expression AND . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 87

state 57

    (35) expression -> expression INF . expression
    (40) expression -> expression INF . NAME INF expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    NAME            shift and go to state 89
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31

    expression                     shift and go to state 88

state 58

    (36) expression -> expression SUP . expression
    (41) expression -> expression SUP . NAME SUP expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    NAME            shift and go to state 91
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31

    expression                     shift and go to state 90

state 59

    (37) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 92

state 60

    (38) expression -> expression EQUALS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 93

state 61

    (48) expression -> NAME LBRACKET . expression RBRACKET
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 94

state 62

    (8) statement -> WHILE LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 95


state 63

    (9) statement -> FOR LPAREN statement expression . SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> FOR LPAREN statement expression . SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 96
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 64

    (18) parameters_function -> NAME . COMMA parameters_function
    (19) parameters_function -> NAME .

    COMMA           shift and go to state 97
    RPAREN          reduce using rule 19 (parameters_function -> NAME .)


state 65

    (11) statement -> VOID NAME LPAREN RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 98


state 66

    (12) statement -> VOID NAME LPAREN parameters_function . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 99


state 67

    (13) statement -> NAME LPAREN RPAREN SEMI .

    MAIN            reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    VOID            reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    NAME            reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> NAME LPAREN RPAREN SEMI .)


state 68

    (14) statement -> NAME LPAREN parameters RPAREN . SEMI

    SEMI            shift and go to state 100


state 69

    (20) parameters -> expression COMMA . parameters
    (20) parameters -> . expression COMMA parameters
    (21) parameters -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 37
    parameters                     shift and go to state 101

state 70

    (48) expression -> NAME LBRACKET . expression RBRACKET
    (46) statement -> NAME LBRACKET . RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> NAME LBRACKET . expression RBRACKET EQUAL expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 43
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 102

state 71

    (23) statement -> NAME EQUAL expression SEMI .

    MAIN            reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    IF              reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    WHILE           reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    FOR             reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    VOID            reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    NAME            reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    FUNCTION        reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    PRINT           reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    LPAREN          reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    NUMBER          reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    COMMA           reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    RPAREN          reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    RBRACE          reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)
    RETURN          reduce using rule 23 (statement -> NAME EQUAL expression SEMI .)


state 72

    (43) statement -> NAME PLUSEQUAL expression SEMI .

    MAIN            reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    IF              reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    WHILE           reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    FOR             reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    VOID            reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    NAME            reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    FUNCTION        reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    PRINT           reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    LPAREN          reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    NUMBER          reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    COMMA           reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    RPAREN          reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    RBRACE          reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)
    RETURN          reduce using rule 43 (statement -> NAME PLUSEQUAL expression SEMI .)


state 73

    (46) statement -> NAME LBRACKET RBRACKET EQUAL . LBRACKET array_values RBRACKET SEMI

    LBRACKET        shift and go to state 103


state 74

    (47) statement -> NAME LBRACKET expression RBRACKET . EQUAL expression SEMI

    EQUAL           shift and go to state 104


state 75

    (15) statement -> FUNCTION NAME LPAREN RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 105


state 76

    (16) statement -> FUNCTION NAME LPAREN parameters_function . RPAREN LBRACE bloc return_statement RBRACE SEMI

    RPAREN          shift and go to state 106


state 77

    (25) statement -> PRINT LPAREN expression_print RPAREN . SEMI

    SEMI            shift and go to state 107


state 78

    (26) expression_print -> expression COMMA . expression_print
    (26) expression_print -> . expression COMMA expression_print
    (27) expression_print -> . expression
    (28) expression_print -> . statement COMMA expression_print
    (29) expression_print -> . statement
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 38
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    expression                     shift and go to state 47
    expression_print               shift and go to state 108
    statement                      shift and go to state 48

state 79

    (28) expression_print -> statement COMMA . expression_print
    (26) expression_print -> . expression COMMA expression_print
    (27) expression_print -> . expression
    (28) expression_print -> . statement COMMA expression_print
    (29) expression_print -> . statement
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 38
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 48
    expression_print               shift and go to state 109
    expression                     shift and go to state 47

state 80

    (22) function_main -> MAIN LPAREN RPAREN LBRACE bloc . RBRACE
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 110
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 81

    (39) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 39 (expression -> LPAREN expression RPAREN .)


state 82

    (5) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (6) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE condition
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 111
    statement                      shift and go to state 4

state 83

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    OR              reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    INF             reduce using rule 30 (expression -> expression PLUS expression .)
    SUP             reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 30 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 30 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! INF             [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 58 ]
  ! EQUALS          [ shift and go to state 60 ]


state 84

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    OR              reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    INF             reduce using rule 31 (expression -> expression MINUS expression .)
    SUP             reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 31 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! INF             [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 58 ]
  ! EQUALS          [ shift and go to state 60 ]


state 85

    (32) expression -> expression TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    OR              reduce using rule 32 (expression -> expression TIMES expression .)
    AND             reduce using rule 32 (expression -> expression TIMES expression .)
    INF             reduce using rule 32 (expression -> expression TIMES expression .)
    SUP             reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 32 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 32 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! INF             [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! EQUALS          [ shift and go to state 60 ]


state 86

    (33) expression -> expression OR expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 33 (expression -> expression OR expression .)
    OR              reduce using rule 33 (expression -> expression OR expression .)
    AND             reduce using rule 33 (expression -> expression OR expression .)
    EQUALS          reduce using rule 33 (expression -> expression OR expression .)
    COMMA           reduce using rule 33 (expression -> expression OR expression .)
    SEMI            reduce using rule 33 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 33 (expression -> expression OR expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59

  ! PLUS            [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 87

    (34) expression -> expression AND expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 34 (expression -> expression AND expression .)
    OR              reduce using rule 34 (expression -> expression AND expression .)
    AND             reduce using rule 34 (expression -> expression AND expression .)
    EQUALS          reduce using rule 34 (expression -> expression AND expression .)
    COMMA           reduce using rule 34 (expression -> expression AND expression .)
    SEMI            reduce using rule 34 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 34 (expression -> expression AND expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59

  ! PLUS            [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 88

    (35) expression -> expression INF expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 35 (expression -> expression INF expression .)
    OR              reduce using rule 35 (expression -> expression INF expression .)
    AND             reduce using rule 35 (expression -> expression INF expression .)
    EQUALS          reduce using rule 35 (expression -> expression INF expression .)
    COMMA           reduce using rule 35 (expression -> expression INF expression .)
    SEMI            reduce using rule 35 (expression -> expression INF expression .)
    RBRACKET        reduce using rule 35 (expression -> expression INF expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59
    INF             shift and go to state 57
    SUP             shift and go to state 58

  ! PLUS            [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INF expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 89

    (40) expression -> expression INF NAME . INF expression
    (45) expression -> NAME .
    (48) expression -> NAME . LBRACKET expression RBRACKET

  ! shift/reduce conflict for INF resolved as shift
    INF             shift and go to state 112
    PLUS            reduce using rule 45 (expression -> NAME .)
    MINUS           reduce using rule 45 (expression -> NAME .)
    TIMES           reduce using rule 45 (expression -> NAME .)
    OR              reduce using rule 45 (expression -> NAME .)
    AND             reduce using rule 45 (expression -> NAME .)
    SUP             reduce using rule 45 (expression -> NAME .)
    DIVIDE          reduce using rule 45 (expression -> NAME .)
    EQUALS          reduce using rule 45 (expression -> NAME .)
    RPAREN          reduce using rule 45 (expression -> NAME .)
    COMMA           reduce using rule 45 (expression -> NAME .)
    SEMI            reduce using rule 45 (expression -> NAME .)
    RBRACKET        reduce using rule 45 (expression -> NAME .)
    LBRACKET        shift and go to state 61

  ! INF             [ reduce using rule 45 (expression -> NAME .) ]


state 90

    (36) expression -> expression SUP expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 36 (expression -> expression SUP expression .)
    OR              reduce using rule 36 (expression -> expression SUP expression .)
    AND             reduce using rule 36 (expression -> expression SUP expression .)
    EQUALS          reduce using rule 36 (expression -> expression SUP expression .)
    COMMA           reduce using rule 36 (expression -> expression SUP expression .)
    SEMI            reduce using rule 36 (expression -> expression SUP expression .)
    RBRACKET        reduce using rule 36 (expression -> expression SUP expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59
    INF             shift and go to state 57
    SUP             shift and go to state 58

  ! PLUS            [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 91

    (41) expression -> expression SUP NAME . SUP expression
    (45) expression -> NAME .
    (48) expression -> NAME . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SUP resolved as shift
    SUP             shift and go to state 113
    PLUS            reduce using rule 45 (expression -> NAME .)
    MINUS           reduce using rule 45 (expression -> NAME .)
    TIMES           reduce using rule 45 (expression -> NAME .)
    OR              reduce using rule 45 (expression -> NAME .)
    AND             reduce using rule 45 (expression -> NAME .)
    INF             reduce using rule 45 (expression -> NAME .)
    DIVIDE          reduce using rule 45 (expression -> NAME .)
    EQUALS          reduce using rule 45 (expression -> NAME .)
    RPAREN          reduce using rule 45 (expression -> NAME .)
    COMMA           reduce using rule 45 (expression -> NAME .)
    SEMI            reduce using rule 45 (expression -> NAME .)
    RBRACKET        reduce using rule 45 (expression -> NAME .)
    LBRACKET        shift and go to state 61

  ! SUP             [ reduce using rule 45 (expression -> NAME .) ]


state 92

    (37) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 37 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 37 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 37 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 37 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 37 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 37 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 37 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 37 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 37 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 37 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 37 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 37 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 37 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! INF             [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! EQUALS          [ shift and go to state 60 ]


state 93

    (38) expression -> expression EQUALS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 38 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 38 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 38 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60

  ! PLUS            [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression EQUALS expression .) ]


state 94

    (48) expression -> NAME LBRACKET expression . RBRACKET
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 114
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 95

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 115
    statement                      shift and go to state 4

state 96

    (9) statement -> FOR LPAREN statement expression SEMI . expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> FOR LPAREN statement expression SEMI . statement RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 38
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 116
    expression                     shift and go to state 117

state 97

    (18) parameters_function -> NAME COMMA . parameters_function
    (18) parameters_function -> . NAME COMMA parameters_function
    (19) parameters_function -> . NAME

    NAME            shift and go to state 64

    parameters_function            shift and go to state 118

state 98

    (11) statement -> VOID NAME LPAREN RPAREN LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 119
    statement                      shift and go to state 4

state 99

    (12) statement -> VOID NAME LPAREN parameters_function RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 120


state 100

    (14) statement -> NAME LPAREN parameters RPAREN SEMI .

    MAIN            reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    IF              reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    WHILE           reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FOR             reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    VOID            reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NAME            reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FUNCTION        reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    PRINT           reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    LPAREN          reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NUMBER          reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    COMMA           reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RPAREN          reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RBRACE          reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RETURN          reduce using rule 14 (statement -> NAME LPAREN parameters RPAREN SEMI .)


state 101

    (20) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 20 (parameters -> expression COMMA parameters .)


state 102

    (48) expression -> NAME LBRACKET expression . RBRACKET
    (47) statement -> NAME LBRACKET expression . RBRACKET EQUAL expression SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RBRACKET        shift and go to state 121
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 103

    (46) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET . array_values RBRACKET SEMI
    (49) array_values -> . expression
    (50) array_values -> . array_values COMMA expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    array_values                   shift and go to state 122
    expression                     shift and go to state 123

state 104

    (47) statement -> NAME LBRACKET expression RBRACKET EQUAL . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 124

state 105

    (15) statement -> FUNCTION NAME LPAREN RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 125
    statement                      shift and go to state 4

state 106

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 126


state 107

    (25) statement -> PRINT LPAREN expression_print RPAREN SEMI .

    MAIN            reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    IF              reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    WHILE           reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FOR             reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    VOID            reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NAME            reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FUNCTION        reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    PRINT           reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    LPAREN          reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NUMBER          reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    COMMA           reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RPAREN          reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RBRACE          reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RETURN          reduce using rule 25 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)


state 108

    (26) expression_print -> expression COMMA expression_print .

    RPAREN          reduce using rule 26 (expression_print -> expression COMMA expression_print .)


state 109

    (28) expression_print -> statement COMMA expression_print .

    RPAREN          reduce using rule 28 (expression_print -> statement COMMA expression_print .)


state 110

    (22) function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE .

    $end            reduce using rule 22 (function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE .)


state 111

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (6) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE condition
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 127
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 112

    (40) expression -> expression INF NAME INF . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 128

state 113

    (41) expression -> expression SUP NAME SUP . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 129

state 114

    (48) expression -> NAME LBRACKET expression RBRACKET .

    RPAREN          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    OR              reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    AND             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    INF             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    SUP             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)


state 115

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 130
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 116

    (10) statement -> FOR LPAREN statement expression SEMI statement . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 131


state 117

    (9) statement -> FOR LPAREN statement expression SEMI expression . RPAREN LBRACE bloc RBRACE SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 132
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 118

    (18) parameters_function -> NAME COMMA parameters_function .

    RPAREN          reduce using rule 18 (parameters_function -> NAME COMMA parameters_function .)


state 119

    (11) statement -> VOID NAME LPAREN RPAREN LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 133
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 120

    (12) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 134
    statement                      shift and go to state 4

state 121

    (48) expression -> NAME LBRACKET expression RBRACKET .
    (47) statement -> NAME LBRACKET expression RBRACKET . EQUAL expression SEMI

    SEMI            reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    OR              reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    AND             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    INF             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    SUP             reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 48 (expression -> NAME LBRACKET expression RBRACKET .)
    EQUAL           shift and go to state 104


state 122

    (46) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values . RBRACKET SEMI
    (50) array_values -> array_values . COMMA expression

    RBRACKET        shift and go to state 135
    COMMA           shift and go to state 136


state 123

    (49) array_values -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RBRACKET        reduce using rule 49 (array_values -> expression .)
    COMMA           reduce using rule 49 (array_values -> expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 124

    (47) statement -> NAME LBRACKET expression RBRACKET EQUAL expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 137
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 125

    (15) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (3) bloc -> bloc . statement
    (17) return_statement -> . RETURN expression SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RETURN          shift and go to state 139
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    return_statement               shift and go to state 138
    statement                      shift and go to state 14

state 126

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 140
    statement                      shift and go to state 4

state 127

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI
    (6) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . condition
    (7) condition -> . ELSE LBRACE bloc RBRACE SEMI

    SEMI            shift and go to state 141
    ELSE            shift and go to state 143

    condition                      shift and go to state 142

state 128

    (40) expression -> expression INF NAME INF expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 40 (expression -> expression INF NAME INF expression .)
    OR              reduce using rule 40 (expression -> expression INF NAME INF expression .)
    AND             reduce using rule 40 (expression -> expression INF NAME INF expression .)
    EQUALS          reduce using rule 40 (expression -> expression INF NAME INF expression .)
    COMMA           reduce using rule 40 (expression -> expression INF NAME INF expression .)
    SEMI            reduce using rule 40 (expression -> expression INF NAME INF expression .)
    RBRACKET        reduce using rule 40 (expression -> expression INF NAME INF expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59
    INF             shift and go to state 57
    SUP             shift and go to state 58

  ! PLUS            [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! INF             [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INF NAME INF expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 129

    (41) expression -> expression SUP NAME SUP expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    OR              reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    AND             reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    EQUALS          reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    COMMA           reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    SEMI            reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    RBRACKET        reduce using rule 41 (expression -> expression SUP NAME SUP expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 59
    INF             shift and go to state 57
    SUP             shift and go to state 58

  ! PLUS            [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! INF             [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! SUP             [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression SUP NAME SUP expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! EQUALS          [ shift and go to state 60 ]


state 130

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 144


state 131

    (10) statement -> FOR LPAREN statement expression SEMI statement RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 145


state 132

    (9) statement -> FOR LPAREN statement expression SEMI expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 146


state 133

    (11) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 147


state 134

    (12) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 148
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 135

    (46) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET . SEMI

    SEMI            shift and go to state 149


state 136

    (50) array_values -> array_values COMMA . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 150

state 137

    (47) statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .

    MAIN            reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    IF              reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    WHILE           reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    FOR             reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    VOID            reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    NAME            reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    FUNCTION        reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    PRINT           reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    LPAREN          reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    NUMBER          reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    COMMA           reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RPAREN          reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RBRACE          reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)
    RETURN          reduce using rule 47 (statement -> NAME LBRACKET expression RBRACKET EQUAL expression SEMI .)


state 138

    (15) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 151


state 139

    (17) return_statement -> RETURN . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression OR expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression INF expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EQUALS expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . expression INF NAME INF expression
    (41) expression -> . expression SUP NAME SUP expression
    (44) expression -> . NUMBER
    (45) expression -> . NAME
    (48) expression -> . NAME LBRACKET expression RBRACKET

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 31
    NAME            shift and go to state 30

    expression                     shift and go to state 152

state 140

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (3) bloc -> bloc . statement
    (17) return_statement -> . RETURN expression SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RETURN          shift and go to state 139
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    return_statement               shift and go to state 153
    statement                      shift and go to state 14

state 141

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 142

    (6) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .

    MAIN            reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    IF              reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    WHILE           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FOR             reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    VOID            reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NAME            reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FUNCTION        reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    PRINT           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    LPAREN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NUMBER          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    COMMA           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RPAREN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RBRACE          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RETURN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)


state 143

    (7) condition -> ELSE . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 154


state 144

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 145

    (10) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 4
    bloc                           shift and go to state 155

state 146

    (9) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 4
    bloc                           shift and go to state 156

state 147

    (11) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 11 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)


state 148

    (12) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 157


state 149

    (46) statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .

    MAIN            reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    IF              reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    WHILE           reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    FOR             reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    VOID            reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    NAME            reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    FUNCTION        reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    PRINT           reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    LPAREN          reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    NUMBER          reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    COMMA           reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RPAREN          reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RBRACE          reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)
    RETURN          reduce using rule 46 (statement -> NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI .)


state 150

    (50) array_values -> array_values COMMA expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    RBRACKET        reduce using rule 50 (array_values -> array_values COMMA expression .)
    COMMA           reduce using rule 50 (array_values -> array_values COMMA expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 151

    (15) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 158


state 152

    (17) return_statement -> RETURN expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . OR expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . INF expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EQUALS expression
    (40) expression -> expression . INF NAME INF expression
    (41) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 159
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    DIVIDE          shift and go to state 59
    EQUALS          shift and go to state 60


state 153

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 160


state 154

    (7) condition -> ELSE LBRACE . bloc RBRACE SEMI
    (3) bloc -> . bloc statement
    (4) bloc -> . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    bloc                           shift and go to state 161
    statement                      shift and go to state 4

state 155

    (10) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 162
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 156

    (9) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 163
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 157

    (12) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 12 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)


state 158

    (15) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .

    MAIN            reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    IF              reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    COMMA           reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 159

    (17) return_statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 17 (return_statement -> RETURN expression SEMI .)


state 160

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 164


state 161

    (7) condition -> ELSE LBRACE bloc . RBRACE SEMI
    (3) bloc -> bloc . statement
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (6) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (13) statement -> . NAME LPAREN RPAREN SEMI
    (14) statement -> . NAME LPAREN parameters RPAREN SEMI
    (15) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (16) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (23) statement -> . NAME EQUAL expression SEMI
    (24) statement -> . NAME EQUAL statement
    (25) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (42) statement -> . NAME PLUSPLUS SEMI
    (43) statement -> . NAME PLUSEQUAL expression SEMI
    (46) statement -> . NAME LBRACKET RBRACKET EQUAL LBRACKET array_values RBRACKET SEMI
    (47) statement -> . NAME LBRACKET expression RBRACKET EQUAL expression SEMI

    RBRACE          shift and go to state 165
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    VOID            shift and go to state 9
    NAME            shift and go to state 10
    FUNCTION        shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 14

state 162

    (10) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 166


state 163

    (9) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 167


state 164

    (16) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .

    MAIN            reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    IF              reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    COMMA           reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 16 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 165

    (7) condition -> ELSE LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 168


state 166

    (10) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 10 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)


state 167

    (9) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)


state 168

    (7) condition -> ELSE LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 7 (condition -> ELSE LBRACE bloc RBRACE SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INF in state 89 resolved as shift
WARNING: shift/reduce conflict for SUP in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for INF in state 93 resolved as shift
WARNING: shift/reduce conflict for SUP in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 93 resolved as shift
