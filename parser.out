Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc function_main
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 5     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
Rule 6     condition -> ELSE LBRACE bloc RBRACE SEMI
Rule 7     statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 8     statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
Rule 9     statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
Rule 10    statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
Rule 11    statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
Rule 12    statement -> NAME LPAREN RPAREN SEMI
Rule 13    statement -> NAME LPAREN parameters RPAREN SEMI
Rule 14    statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 15    statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 16    return_statement -> RETURN expression SEMI
Rule 17    parameters_function -> NAME COMMA parameters_function
Rule 18    parameters_function -> NAME
Rule 19    parameters -> expression COMMA parameters
Rule 20    parameters -> expression
Rule 21    function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE
Rule 22    statement -> NAME EQUAL expression SEMI
Rule 23    statement -> NAME EQUAL statement
Rule 24    statement -> PRINT LPAREN expression_print RPAREN SEMI
Rule 25    expression_print -> expression COMMA expression_print
Rule 26    expression_print -> expression
Rule 27    expression_print -> statement COMMA expression_print
Rule 28    expression_print -> statement
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression TIMES expression
Rule 32    expression -> expression OR expression
Rule 33    expression -> expression AND expression
Rule 34    expression -> expression INF expression
Rule 35    expression -> expression SUP expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> expression EQUALS expression
Rule 38    expression -> LPAREN expression RPAREN
Rule 39    expression -> expression INF NAME INF expression
Rule 40    expression -> expression SUP NAME SUP expression
Rule 41    statement -> NAME PLUSPLUS SEMI
Rule 42    expression -> NUMBER
Rule 43    expression -> NAME

Terminals, with rules where they appear

AND                  : 33
COMMA                : 17 19 25 27
DIVIDE               : 36
ELSE                 : 6
EQUAL                : 22 23
EQUALS               : 37
FOR                  : 8 9
FUNCTION             : 14 15
IF                   : 4 5
INF                  : 34 39 39
LBRACE               : 4 5 6 7 8 9 10 11 14 15 21
LPAREN               : 4 5 7 8 9 10 11 12 13 14 15 21 24 38
MAIN                 : 21
MINUS                : 30
NAME                 : 10 11 12 13 14 15 17 18 22 23 39 40 41 43
NUMBER               : 42
OR                   : 32
PLUS                 : 29
PLUSPLUS             : 41
PRINT                : 24
RBRACE               : 4 5 6 7 8 9 10 11 14 15 21
RETURN               : 16
RPAREN               : 4 5 7 8 9 10 11 12 13 14 15 21 24 38
SEMI                 : 4 6 7 8 8 9 9 10 11 12 13 14 15 16 22 24 41
SUP                  : 35 40 40
TIMES                : 31
VOID                 : 10 11
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 4 5 6 7 8 9 10 11 14 15 21
condition            : 5
expression           : 4 5 7 8 8 9 16 19 20 22 25 26 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 39 40 40
expression_print     : 24 25 27
function_main        : 1
parameters           : 13 19
parameters_function  : 11 15 17
return_statement     : 14 15
start                : 0
statement            : 2 3 8 9 9 23 27 28

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc function_main
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc . function_main
    (2) bloc -> bloc . statement
    (21) function_main -> . MAIN LPAREN RPAREN LBRACE bloc RBRACE
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    MAIN            shift and go to state 13
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    function_main                  shift and go to state 11
    statement                      shift and go to state 12

state 3

    (3) bloc -> statement .

    MAIN            reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    VOID            reduce using rule 3 (bloc -> statement .)
    NAME            reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    RBRACE          reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE condition

    LPAREN          shift and go to state 14


state 5

    (7) statement -> WHILE . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 15


state 6

    (8) statement -> FOR . LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR . LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 16


state 7

    (10) statement -> VOID . NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID . NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    NAME            shift and go to state 17


state 8

    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (22) statement -> NAME . EQUAL expression SEMI
    (23) statement -> NAME . EQUAL statement
    (41) statement -> NAME . PLUSPLUS SEMI

    LPAREN          shift and go to state 18
    EQUAL           shift and go to state 19
    PLUSPLUS        shift and go to state 20


state 9

    (14) statement -> FUNCTION . NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION . NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    NAME            shift and go to state 21


state 10

    (24) statement -> PRINT . LPAREN expression_print RPAREN SEMI

    LPAREN          shift and go to state 22


state 11

    (1) start -> bloc function_main .

    $end            reduce using rule 1 (start -> bloc function_main .)


state 12

    (2) bloc -> bloc statement .

    MAIN            reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    VOID            reduce using rule 2 (bloc -> bloc statement .)
    NAME            reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    RBRACE          reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)


state 13

    (21) function_main -> MAIN . LPAREN RPAREN LBRACE bloc RBRACE

    LPAREN          shift and go to state 23


state 14

    (4) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE condition
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 25

state 15

    (7) statement -> WHILE LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 28

state 16

    (8) statement -> FOR LPAREN . statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN . statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 29

state 17

    (10) statement -> VOID NAME . LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME . LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 30


state 18

    (12) statement -> NAME LPAREN . RPAREN SEMI
    (13) statement -> NAME LPAREN . parameters RPAREN SEMI
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    RPAREN          shift and go to state 31
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    parameters                     shift and go to state 32
    expression                     shift and go to state 33

state 19

    (22) statement -> NAME EQUAL . expression SEMI
    (23) statement -> NAME EQUAL . statement
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 34
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    expression                     shift and go to state 35
    statement                      shift and go to state 36

state 20

    (41) statement -> NAME PLUSPLUS . SEMI

    SEMI            shift and go to state 37


state 21

    (14) statement -> FUNCTION NAME . LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME . LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    LPAREN          shift and go to state 38


state 22

    (24) statement -> PRINT LPAREN . expression_print RPAREN SEMI
    (25) expression_print -> . expression COMMA expression_print
    (26) expression_print -> . expression
    (27) expression_print -> . statement COMMA expression_print
    (28) expression_print -> . statement
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 34
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    expression_print               shift and go to state 39
    expression                     shift and go to state 40
    statement                      shift and go to state 41

state 23

    (21) function_main -> MAIN LPAREN . RPAREN LBRACE bloc RBRACE

    RPAREN          shift and go to state 42


state 24

    (38) expression -> LPAREN . expression RPAREN
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 43

state 25

    (4) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE condition
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 26

    (43) expression -> NAME .

    RPAREN          reduce using rule 43 (expression -> NAME .)
    PLUS            reduce using rule 43 (expression -> NAME .)
    MINUS           reduce using rule 43 (expression -> NAME .)
    TIMES           reduce using rule 43 (expression -> NAME .)
    OR              reduce using rule 43 (expression -> NAME .)
    AND             reduce using rule 43 (expression -> NAME .)
    INF             reduce using rule 43 (expression -> NAME .)
    SUP             reduce using rule 43 (expression -> NAME .)
    DIVIDE          reduce using rule 43 (expression -> NAME .)
    EQUALS          reduce using rule 43 (expression -> NAME .)
    COMMA           reduce using rule 43 (expression -> NAME .)
    SEMI            reduce using rule 43 (expression -> NAME .)


state 27

    (42) expression -> NUMBER .

    RPAREN          reduce using rule 42 (expression -> NUMBER .)
    PLUS            reduce using rule 42 (expression -> NUMBER .)
    MINUS           reduce using rule 42 (expression -> NUMBER .)
    TIMES           reduce using rule 42 (expression -> NUMBER .)
    OR              reduce using rule 42 (expression -> NUMBER .)
    AND             reduce using rule 42 (expression -> NUMBER .)
    INF             reduce using rule 42 (expression -> NUMBER .)
    SUP             reduce using rule 42 (expression -> NUMBER .)
    DIVIDE          reduce using rule 42 (expression -> NUMBER .)
    EQUALS          reduce using rule 42 (expression -> NUMBER .)
    COMMA           reduce using rule 42 (expression -> NUMBER .)
    SEMI            reduce using rule 42 (expression -> NUMBER .)


state 28

    (7) statement -> WHILE LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 29

    (8) statement -> FOR LPAREN statement . expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement . expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 55

state 30

    (10) statement -> VOID NAME LPAREN . RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME LPAREN . parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 57
    NAME            shift and go to state 56

    parameters_function            shift and go to state 58

state 31

    (12) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 59


state 32

    (13) statement -> NAME LPAREN parameters . RPAREN SEMI

    RPAREN          shift and go to state 60


state 33

    (19) parameters -> expression . COMMA parameters
    (20) parameters -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 61
    RPAREN          reduce using rule 20 (parameters -> expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 34

    (43) expression -> NAME .
    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (22) statement -> NAME . EQUAL expression SEMI
    (23) statement -> NAME . EQUAL statement
    (41) statement -> NAME . PLUSPLUS SEMI

    SEMI            reduce using rule 43 (expression -> NAME .)
    PLUS            reduce using rule 43 (expression -> NAME .)
    MINUS           reduce using rule 43 (expression -> NAME .)
    TIMES           reduce using rule 43 (expression -> NAME .)
    OR              reduce using rule 43 (expression -> NAME .)
    AND             reduce using rule 43 (expression -> NAME .)
    INF             reduce using rule 43 (expression -> NAME .)
    SUP             reduce using rule 43 (expression -> NAME .)
    DIVIDE          reduce using rule 43 (expression -> NAME .)
    EQUALS          reduce using rule 43 (expression -> NAME .)
    COMMA           reduce using rule 43 (expression -> NAME .)
    RPAREN          reduce using rule 43 (expression -> NAME .)
    LPAREN          shift and go to state 18
    EQUAL           shift and go to state 19
    PLUSPLUS        shift and go to state 20


state 35

    (22) statement -> NAME EQUAL expression . SEMI
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 62
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 36

    (23) statement -> NAME EQUAL statement .

    MAIN            reduce using rule 23 (statement -> NAME EQUAL statement .)
    IF              reduce using rule 23 (statement -> NAME EQUAL statement .)
    WHILE           reduce using rule 23 (statement -> NAME EQUAL statement .)
    FOR             reduce using rule 23 (statement -> NAME EQUAL statement .)
    VOID            reduce using rule 23 (statement -> NAME EQUAL statement .)
    NAME            reduce using rule 23 (statement -> NAME EQUAL statement .)
    FUNCTION        reduce using rule 23 (statement -> NAME EQUAL statement .)
    PRINT           reduce using rule 23 (statement -> NAME EQUAL statement .)
    LPAREN          reduce using rule 23 (statement -> NAME EQUAL statement .)
    NUMBER          reduce using rule 23 (statement -> NAME EQUAL statement .)
    COMMA           reduce using rule 23 (statement -> NAME EQUAL statement .)
    RPAREN          reduce using rule 23 (statement -> NAME EQUAL statement .)
    RBRACE          reduce using rule 23 (statement -> NAME EQUAL statement .)
    RETURN          reduce using rule 23 (statement -> NAME EQUAL statement .)


state 37

    (41) statement -> NAME PLUSPLUS SEMI .

    MAIN            reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    IF              reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    WHILE           reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    FOR             reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    VOID            reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    NAME            reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    FUNCTION        reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    PRINT           reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    LPAREN          reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    NUMBER          reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    COMMA           reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    RPAREN          reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    RBRACE          reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)
    RETURN          reduce using rule 41 (statement -> NAME PLUSPLUS SEMI .)


state 38

    (14) statement -> FUNCTION NAME LPAREN . RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME LPAREN . parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 63
    NAME            shift and go to state 56

    parameters_function            shift and go to state 64

state 39

    (24) statement -> PRINT LPAREN expression_print . RPAREN SEMI

    RPAREN          shift and go to state 65


state 40

    (25) expression_print -> expression . COMMA expression_print
    (26) expression_print -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 66
    RPAREN          reduce using rule 26 (expression_print -> expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 41

    (27) expression_print -> statement . COMMA expression_print
    (28) expression_print -> statement .

    COMMA           shift and go to state 67
    RPAREN          reduce using rule 28 (expression_print -> statement .)


state 42

    (21) function_main -> MAIN LPAREN RPAREN . LBRACE bloc RBRACE

    LBRACE          shift and go to state 68


state 43

    (38) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 44

    (4) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE condition

    LBRACE          shift and go to state 70


state 45

    (29) expression -> expression PLUS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 71

state 46

    (30) expression -> expression MINUS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 72

state 47

    (31) expression -> expression TIMES . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 73

state 48

    (32) expression -> expression OR . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 74

state 49

    (33) expression -> expression AND . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 75

state 50

    (34) expression -> expression INF . expression
    (39) expression -> expression INF . NAME INF expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    NAME            shift and go to state 77
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27

    expression                     shift and go to state 76

state 51

    (35) expression -> expression SUP . expression
    (40) expression -> expression SUP . NAME SUP expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    NAME            shift and go to state 79
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27

    expression                     shift and go to state 78

state 52

    (36) expression -> expression DIVIDE . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 80

state 53

    (37) expression -> expression EQUALS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 81

state 54

    (7) statement -> WHILE LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 82


state 55

    (8) statement -> FOR LPAREN statement expression . SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression . SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 83
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 56

    (17) parameters_function -> NAME . COMMA parameters_function
    (18) parameters_function -> NAME .

    COMMA           shift and go to state 84
    RPAREN          reduce using rule 18 (parameters_function -> NAME .)


state 57

    (10) statement -> VOID NAME LPAREN RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 85


state 58

    (11) statement -> VOID NAME LPAREN parameters_function . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 86


state 59

    (12) statement -> NAME LPAREN RPAREN SEMI .

    MAIN            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    VOID            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NAME            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)


state 60

    (13) statement -> NAME LPAREN parameters RPAREN . SEMI

    SEMI            shift and go to state 87


state 61

    (19) parameters -> expression COMMA . parameters
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 33
    parameters                     shift and go to state 88

state 62

    (22) statement -> NAME EQUAL expression SEMI .

    MAIN            reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    IF              reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    WHILE           reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    FOR             reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    VOID            reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    NAME            reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    FUNCTION        reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    PRINT           reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    LPAREN          reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    NUMBER          reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    COMMA           reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    RPAREN          reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    RBRACE          reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)
    RETURN          reduce using rule 22 (statement -> NAME EQUAL expression SEMI .)


state 63

    (14) statement -> FUNCTION NAME LPAREN RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 89


state 64

    (15) statement -> FUNCTION NAME LPAREN parameters_function . RPAREN LBRACE bloc return_statement RBRACE SEMI

    RPAREN          shift and go to state 90


state 65

    (24) statement -> PRINT LPAREN expression_print RPAREN . SEMI

    SEMI            shift and go to state 91


state 66

    (25) expression_print -> expression COMMA . expression_print
    (25) expression_print -> . expression COMMA expression_print
    (26) expression_print -> . expression
    (27) expression_print -> . statement COMMA expression_print
    (28) expression_print -> . statement
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 34
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    expression                     shift and go to state 40
    expression_print               shift and go to state 92
    statement                      shift and go to state 41

state 67

    (27) expression_print -> statement COMMA . expression_print
    (25) expression_print -> . expression COMMA expression_print
    (26) expression_print -> . expression
    (27) expression_print -> . statement COMMA expression_print
    (28) expression_print -> . statement
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 34
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 41
    expression_print               shift and go to state 93
    expression                     shift and go to state 40

state 68

    (21) function_main -> MAIN LPAREN RPAREN LBRACE . bloc RBRACE
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 94
    statement                      shift and go to state 3

state 69

    (38) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 38 (expression -> LPAREN expression RPAREN .)


state 70

    (4) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE condition
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 95
    statement                      shift and go to state 3

state 71

    (29) expression -> expression PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 29 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 29 (expression -> expression PLUS expression .)
    OR              reduce using rule 29 (expression -> expression PLUS expression .)
    AND             reduce using rule 29 (expression -> expression PLUS expression .)
    INF             reduce using rule 29 (expression -> expression PLUS expression .)
    SUP             reduce using rule 29 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 29 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 29 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 29 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 53 ]


state 72

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    OR              reduce using rule 30 (expression -> expression MINUS expression .)
    AND             reduce using rule 30 (expression -> expression MINUS expression .)
    INF             reduce using rule 30 (expression -> expression MINUS expression .)
    SUP             reduce using rule 30 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 30 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 53 ]


state 73

    (31) expression -> expression TIMES expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 31 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 31 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 31 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 31 (expression -> expression TIMES expression .)
    OR              reduce using rule 31 (expression -> expression TIMES expression .)
    AND             reduce using rule 31 (expression -> expression TIMES expression .)
    INF             reduce using rule 31 (expression -> expression TIMES expression .)
    SUP             reduce using rule 31 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 31 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 31 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 31 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 31 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 74

    (32) expression -> expression OR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 32 (expression -> expression OR expression .)
    OR              reduce using rule 32 (expression -> expression OR expression .)
    AND             reduce using rule 32 (expression -> expression OR expression .)
    EQUALS          reduce using rule 32 (expression -> expression OR expression .)
    COMMA           reduce using rule 32 (expression -> expression OR expression .)
    SEMI            reduce using rule 32 (expression -> expression OR expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52

  ! PLUS            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 75

    (33) expression -> expression AND expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 33 (expression -> expression AND expression .)
    OR              reduce using rule 33 (expression -> expression AND expression .)
    AND             reduce using rule 33 (expression -> expression AND expression .)
    EQUALS          reduce using rule 33 (expression -> expression AND expression .)
    COMMA           reduce using rule 33 (expression -> expression AND expression .)
    SEMI            reduce using rule 33 (expression -> expression AND expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52

  ! PLUS            [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 76

    (34) expression -> expression INF expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 34 (expression -> expression INF expression .)
    OR              reduce using rule 34 (expression -> expression INF expression .)
    AND             reduce using rule 34 (expression -> expression INF expression .)
    EQUALS          reduce using rule 34 (expression -> expression INF expression .)
    COMMA           reduce using rule 34 (expression -> expression INF expression .)
    SEMI            reduce using rule 34 (expression -> expression INF expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52
    INF             shift and go to state 50
    SUP             shift and go to state 51

  ! PLUS            [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression INF expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 77

    (39) expression -> expression INF NAME . INF expression
    (43) expression -> NAME .

  ! shift/reduce conflict for INF resolved as shift
    INF             shift and go to state 96
    PLUS            reduce using rule 43 (expression -> NAME .)
    MINUS           reduce using rule 43 (expression -> NAME .)
    TIMES           reduce using rule 43 (expression -> NAME .)
    OR              reduce using rule 43 (expression -> NAME .)
    AND             reduce using rule 43 (expression -> NAME .)
    SUP             reduce using rule 43 (expression -> NAME .)
    DIVIDE          reduce using rule 43 (expression -> NAME .)
    EQUALS          reduce using rule 43 (expression -> NAME .)
    RPAREN          reduce using rule 43 (expression -> NAME .)
    COMMA           reduce using rule 43 (expression -> NAME .)
    SEMI            reduce using rule 43 (expression -> NAME .)

  ! INF             [ reduce using rule 43 (expression -> NAME .) ]


state 78

    (35) expression -> expression SUP expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 35 (expression -> expression SUP expression .)
    OR              reduce using rule 35 (expression -> expression SUP expression .)
    AND             reduce using rule 35 (expression -> expression SUP expression .)
    EQUALS          reduce using rule 35 (expression -> expression SUP expression .)
    COMMA           reduce using rule 35 (expression -> expression SUP expression .)
    SEMI            reduce using rule 35 (expression -> expression SUP expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52
    INF             shift and go to state 50
    SUP             shift and go to state 51

  ! PLUS            [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression SUP expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 79

    (40) expression -> expression SUP NAME . SUP expression
    (43) expression -> NAME .

  ! shift/reduce conflict for SUP resolved as shift
    SUP             shift and go to state 97
    PLUS            reduce using rule 43 (expression -> NAME .)
    MINUS           reduce using rule 43 (expression -> NAME .)
    TIMES           reduce using rule 43 (expression -> NAME .)
    OR              reduce using rule 43 (expression -> NAME .)
    AND             reduce using rule 43 (expression -> NAME .)
    INF             reduce using rule 43 (expression -> NAME .)
    DIVIDE          reduce using rule 43 (expression -> NAME .)
    EQUALS          reduce using rule 43 (expression -> NAME .)
    RPAREN          reduce using rule 43 (expression -> NAME .)
    COMMA           reduce using rule 43 (expression -> NAME .)
    SEMI            reduce using rule 43 (expression -> NAME .)

  ! SUP             [ reduce using rule 43 (expression -> NAME .) ]


state 80

    (36) expression -> expression DIVIDE expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 36 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 36 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 36 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 36 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 36 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 36 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 36 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 36 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 81

    (37) expression -> expression EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 37 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 37 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 37 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression EQUALS expression .) ]


state 82

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 83

    (8) statement -> FOR LPAREN statement expression SEMI . expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression SEMI . statement RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 34
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 99
    expression                     shift and go to state 100

state 84

    (17) parameters_function -> NAME COMMA . parameters_function
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    NAME            shift and go to state 56

    parameters_function            shift and go to state 101

state 85

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 102
    statement                      shift and go to state 3

state 86

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 103


state 87

    (13) statement -> NAME LPAREN parameters RPAREN SEMI .

    MAIN            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    VOID            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NAME            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    COMMA           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RBRACE          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)


state 88

    (19) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 19 (parameters -> expression COMMA parameters .)


state 89

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 104
    statement                      shift and go to state 3

state 90

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 105


state 91

    (24) statement -> PRINT LPAREN expression_print RPAREN SEMI .

    MAIN            reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    IF              reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    WHILE           reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FOR             reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    VOID            reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NAME            reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FUNCTION        reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    PRINT           reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    LPAREN          reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NUMBER          reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    COMMA           reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RPAREN          reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RBRACE          reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RETURN          reduce using rule 24 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)


state 92

    (25) expression_print -> expression COMMA expression_print .

    RPAREN          reduce using rule 25 (expression_print -> expression COMMA expression_print .)


state 93

    (27) expression_print -> statement COMMA expression_print .

    RPAREN          reduce using rule 27 (expression_print -> statement COMMA expression_print .)


state 94

    (21) function_main -> MAIN LPAREN RPAREN LBRACE bloc . RBRACE
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 106
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 95

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE condition
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 107
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 96

    (39) expression -> expression INF NAME INF . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 108

state 97

    (40) expression -> expression SUP NAME SUP . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 109

state 98

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 110
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 99

    (9) statement -> FOR LPAREN statement expression SEMI statement . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 111


state 100

    (8) statement -> FOR LPAREN statement expression SEMI expression . RPAREN LBRACE bloc RBRACE SEMI
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 101

    (17) parameters_function -> NAME COMMA parameters_function .

    RPAREN          reduce using rule 17 (parameters_function -> NAME COMMA parameters_function .)


state 102

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 113
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 103

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 114
    statement                      shift and go to state 3

state 104

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RETURN          shift and go to state 116
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 115
    statement                      shift and go to state 12

state 105

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 117
    statement                      shift and go to state 3

state 106

    (21) function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE .

    $end            reduce using rule 21 (function_main -> MAIN LPAREN RPAREN LBRACE bloc RBRACE .)


state 107

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . condition
    (6) condition -> . ELSE LBRACE bloc RBRACE SEMI

    SEMI            shift and go to state 118
    ELSE            shift and go to state 120

    condition                      shift and go to state 119

state 108

    (39) expression -> expression INF NAME INF expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 39 (expression -> expression INF NAME INF expression .)
    OR              reduce using rule 39 (expression -> expression INF NAME INF expression .)
    AND             reduce using rule 39 (expression -> expression INF NAME INF expression .)
    EQUALS          reduce using rule 39 (expression -> expression INF NAME INF expression .)
    COMMA           reduce using rule 39 (expression -> expression INF NAME INF expression .)
    SEMI            reduce using rule 39 (expression -> expression INF NAME INF expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52
    INF             shift and go to state 50
    SUP             shift and go to state 51

  ! PLUS            [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! INF             [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! SUP             [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression INF NAME INF expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 109

    (40) expression -> expression SUP NAME SUP expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    OR              reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    AND             reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    EQUALS          reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    COMMA           reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    SEMI            reduce using rule 40 (expression -> expression SUP NAME SUP expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 52
    INF             shift and go to state 50
    SUP             shift and go to state 51

  ! PLUS            [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! INF             [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression SUP NAME SUP expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 53 ]


state 110

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 121


state 111

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 122


state 112

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 123


state 113

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 124


state 114

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 125
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 115

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 126


state 116

    (16) return_statement -> RETURN . expression SEMI
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression INF expression
    (35) expression -> . expression SUP expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression EQUALS expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . expression INF NAME INF expression
    (40) expression -> . expression SUP NAME SUP expression
    (42) expression -> . NUMBER
    (43) expression -> . NAME

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 26

    expression                     shift and go to state 127

state 117

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RETURN          shift and go to state 116
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 128
    statement                      shift and go to state 12

state 118

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 119

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .

    MAIN            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    VOID            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NAME            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FUNCTION        reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    COMMA           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RETURN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)


state 120

    (6) condition -> ELSE . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 129


state 121

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 122

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 130

state 123

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 131

state 124

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)


state 125

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 132


state 126

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 133


state 127

    (16) return_statement -> RETURN expression . SEMI
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . INF expression
    (35) expression -> expression . SUP expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . EQUALS expression
    (39) expression -> expression . INF NAME INF expression
    (40) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 134
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    DIVIDE          shift and go to state 52
    EQUALS          shift and go to state 53


state 128

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 135


state 129

    (6) condition -> ELSE LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 136
    statement                      shift and go to state 3

state 130

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 137
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 131

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 138
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 132

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)


state 133

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .

    MAIN            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    IF              reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    COMMA           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 134

    (16) return_statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 16 (return_statement -> RETURN expression SEMI .)


state 135

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 139


state 136

    (6) condition -> ELSE LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (22) statement -> . NAME EQUAL expression SEMI
    (23) statement -> . NAME EQUAL statement
    (24) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (41) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 140
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 12

state 137

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 141


state 138

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 142


state 139

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .

    MAIN            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    IF              reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    COMMA           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 140

    (6) condition -> ELSE LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 143


state 141

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)


state 142

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)


state 143

    (6) condition -> ELSE LBRACE bloc RBRACE SEMI .

    MAIN            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    IF              reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    COMMA           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INF in state 77 resolved as shift
WARNING: shift/reduce conflict for SUP in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for INF in state 81 resolved as shift
WARNING: shift/reduce conflict for SUP in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 81 resolved as shift
