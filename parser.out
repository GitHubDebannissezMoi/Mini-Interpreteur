Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 5     statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
Rule 6     condition -> ELSE LBRACE bloc RBRACE SEMI
Rule 7     statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
Rule 8     statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
Rule 9     statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
Rule 10    statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
Rule 11    statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
Rule 12    statement -> NAME LPAREN RPAREN SEMI
Rule 13    statement -> NAME LPAREN parameters RPAREN SEMI
Rule 14    statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 15    statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
Rule 16    return_statement -> RETURN expression SEMI
Rule 17    parameters_function -> NAME COMMA parameters_function
Rule 18    parameters_function -> NAME
Rule 19    parameters -> expression COMMA parameters
Rule 20    parameters -> expression
Rule 21    statement -> NAME EQUAL expression SEMI
Rule 22    statement -> PRINT LPAREN expression_print RPAREN SEMI
Rule 23    expression_print -> expression COMMA expression_print
Rule 24    expression_print -> expression
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression TIMES expression
Rule 28    expression -> expression OR expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression INF expression
Rule 31    expression -> expression SUP expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression EQUALS expression
Rule 34    expression -> LPAREN expression RPAREN
Rule 35    expression -> expression INF NAME INF expression
Rule 36    expression -> expression SUP NAME SUP expression
Rule 37    statement -> NAME PLUSPLUS SEMI
Rule 38    expression -> NUMBER
Rule 39    expression -> NAME

Terminals, with rules where they appear

AND                  : 29
COMMA                : 17 19 23
DIVIDE               : 32
ELSE                 : 6
EQUAL                : 21
EQUALS               : 33
FOR                  : 8 9
FUNCTION             : 14 15
IF                   : 4 5
INF                  : 30 35 35
LBRACE               : 4 5 6 7 8 9 10 11 14 15
LPAREN               : 4 5 7 8 9 10 11 12 13 14 15 22 34
MINUS                : 26
NAME                 : 10 11 12 13 14 15 17 18 21 35 36 37 39
NUMBER               : 38
OR                   : 28
PLUS                 : 25
PLUSPLUS             : 37
PRINT                : 22
RBRACE               : 4 5 6 7 8 9 10 11 14 15
RETURN               : 16
RPAREN               : 4 5 7 8 9 10 11 12 13 14 15 22 34
SEMI                 : 4 6 7 8 8 9 9 10 11 12 13 14 15 16 21 22 37
SUP                  : 31 36 36
TIMES                : 27
VOID                 : 10 11
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 4 5 6 7 8 9 10 11 14 15
condition            : 5
expression           : 4 5 7 8 8 9 16 19 20 21 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 35 36 36
expression_print     : 22 23
parameters           : 13 19
parameters_function  : 11 15 17
return_statement     : 14 15
start                : 0
statement            : 2 3 8 9 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    $end            reduce using rule 1 (start -> bloc .)
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement .

    IF              reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    VOID            reduce using rule 3 (bloc -> statement .)
    NAME            reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    RBRACE          reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF . LPAREN expression RPAREN LBRACE bloc RBRACE condition

    LPAREN          shift and go to state 12


state 5

    (7) statement -> WHILE . LPAREN expression RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 13


state 6

    (8) statement -> FOR . LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR . LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 14


state 7

    (10) statement -> VOID . NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID . NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    NAME            shift and go to state 15


state 8

    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (21) statement -> NAME . EQUAL expression SEMI
    (37) statement -> NAME . PLUSPLUS SEMI

    LPAREN          shift and go to state 16
    EQUAL           shift and go to state 17
    PLUSPLUS        shift and go to state 18


state 9

    (14) statement -> FUNCTION . NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION . NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    NAME            shift and go to state 19


state 10

    (22) statement -> PRINT . LPAREN expression_print RPAREN SEMI

    LPAREN          shift and go to state 20


state 11

    (2) bloc -> bloc statement .

    IF              reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    VOID            reduce using rule 2 (bloc -> bloc statement .)
    NAME            reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    RBRACE          reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)


state 12

    (4) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN . expression RPAREN LBRACE bloc RBRACE condition
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 22

state 13

    (7) statement -> WHILE LPAREN . expression RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 25

state 14

    (8) statement -> FOR LPAREN . statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN . statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 26

state 15

    (10) statement -> VOID NAME . LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME . LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI

    LPAREN          shift and go to state 27


state 16

    (12) statement -> NAME LPAREN . RPAREN SEMI
    (13) statement -> NAME LPAREN . parameters RPAREN SEMI
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    RPAREN          shift and go to state 28
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    parameters                     shift and go to state 29
    expression                     shift and go to state 30

state 17

    (21) statement -> NAME EQUAL . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 31

state 18

    (37) statement -> NAME PLUSPLUS . SEMI

    SEMI            shift and go to state 32


state 19

    (14) statement -> FUNCTION NAME . LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME . LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI

    LPAREN          shift and go to state 33


state 20

    (22) statement -> PRINT LPAREN . expression_print RPAREN SEMI
    (23) expression_print -> . expression COMMA expression_print
    (24) expression_print -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression_print               shift and go to state 34
    expression                     shift and go to state 35

state 21

    (34) expression -> LPAREN . expression RPAREN
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 36

state 22

    (4) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression . RPAREN LBRACE bloc RBRACE condition
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 23

    (39) expression -> NAME .

    RPAREN          reduce using rule 39 (expression -> NAME .)
    PLUS            reduce using rule 39 (expression -> NAME .)
    MINUS           reduce using rule 39 (expression -> NAME .)
    TIMES           reduce using rule 39 (expression -> NAME .)
    OR              reduce using rule 39 (expression -> NAME .)
    AND             reduce using rule 39 (expression -> NAME .)
    INF             reduce using rule 39 (expression -> NAME .)
    SUP             reduce using rule 39 (expression -> NAME .)
    DIVIDE          reduce using rule 39 (expression -> NAME .)
    EQUALS          reduce using rule 39 (expression -> NAME .)
    COMMA           reduce using rule 39 (expression -> NAME .)
    SEMI            reduce using rule 39 (expression -> NAME .)


state 24

    (38) expression -> NUMBER .

    RPAREN          reduce using rule 38 (expression -> NUMBER .)
    PLUS            reduce using rule 38 (expression -> NUMBER .)
    MINUS           reduce using rule 38 (expression -> NUMBER .)
    TIMES           reduce using rule 38 (expression -> NUMBER .)
    OR              reduce using rule 38 (expression -> NUMBER .)
    AND             reduce using rule 38 (expression -> NUMBER .)
    INF             reduce using rule 38 (expression -> NUMBER .)
    SUP             reduce using rule 38 (expression -> NUMBER .)
    DIVIDE          reduce using rule 38 (expression -> NUMBER .)
    EQUALS          reduce using rule 38 (expression -> NUMBER .)
    COMMA           reduce using rule 38 (expression -> NUMBER .)
    SEMI            reduce using rule 38 (expression -> NUMBER .)


state 25

    (7) statement -> WHILE LPAREN expression . RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 47
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 26

    (8) statement -> FOR LPAREN statement . expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement . expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 48

state 27

    (10) statement -> VOID NAME LPAREN . RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> VOID NAME LPAREN . parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 50
    NAME            shift and go to state 49

    parameters_function            shift and go to state 51

state 28

    (12) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 52


state 29

    (13) statement -> NAME LPAREN parameters . RPAREN SEMI

    RPAREN          shift and go to state 53


state 30

    (19) parameters -> expression . COMMA parameters
    (20) parameters -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 54
    RPAREN          reduce using rule 20 (parameters -> expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 31

    (21) statement -> NAME EQUAL expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 55
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 32

    (37) statement -> NAME PLUSPLUS SEMI .

    IF              reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    WHILE           reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    FOR             reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    VOID            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    NAME            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    FUNCTION        reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    PRINT           reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    $end            reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    LPAREN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    NUMBER          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RBRACE          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RPAREN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)
    RETURN          reduce using rule 37 (statement -> NAME PLUSPLUS SEMI .)


state 33

    (14) statement -> FUNCTION NAME LPAREN . RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> FUNCTION NAME LPAREN . parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    RPAREN          shift and go to state 56
    NAME            shift and go to state 49

    parameters_function            shift and go to state 57

state 34

    (22) statement -> PRINT LPAREN expression_print . RPAREN SEMI

    RPAREN          shift and go to state 58


state 35

    (23) expression_print -> expression . COMMA expression_print
    (24) expression_print -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    COMMA           shift and go to state 59
    RPAREN          reduce using rule 24 (expression_print -> expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 36

    (34) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 60
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 37

    (4) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN . LBRACE bloc RBRACE condition

    LBRACE          shift and go to state 61


state 38

    (25) expression -> expression PLUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 62

state 39

    (26) expression -> expression MINUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 63

state 40

    (27) expression -> expression TIMES . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 64

state 41

    (28) expression -> expression OR . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 65

state 42

    (29) expression -> expression AND . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 66

state 43

    (30) expression -> expression INF . expression
    (35) expression -> expression INF . NAME INF expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    NAME            shift and go to state 68
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24

    expression                     shift and go to state 67

state 44

    (31) expression -> expression SUP . expression
    (36) expression -> expression SUP . NAME SUP expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    NAME            shift and go to state 70
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24

    expression                     shift and go to state 69

state 45

    (32) expression -> expression DIVIDE . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 71

state 46

    (33) expression -> expression EQUALS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 72

state 47

    (7) statement -> WHILE LPAREN expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 73


state 48

    (8) statement -> FOR LPAREN statement expression . SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression . SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 74
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 49

    (17) parameters_function -> NAME . COMMA parameters_function
    (18) parameters_function -> NAME .

    COMMA           shift and go to state 75
    RPAREN          reduce using rule 18 (parameters_function -> NAME .)


state 50

    (10) statement -> VOID NAME LPAREN RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 76


state 51

    (11) statement -> VOID NAME LPAREN parameters_function . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 77


state 52

    (12) statement -> NAME LPAREN RPAREN SEMI .

    IF              reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    VOID            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NAME            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 12 (statement -> NAME LPAREN RPAREN SEMI .)


state 53

    (13) statement -> NAME LPAREN parameters RPAREN . SEMI

    SEMI            shift and go to state 78


state 54

    (19) parameters -> expression COMMA . parameters
    (19) parameters -> . expression COMMA parameters
    (20) parameters -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 30
    parameters                     shift and go to state 79

state 55

    (21) statement -> NAME EQUAL expression SEMI .

    IF              reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    WHILE           reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    FOR             reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    VOID            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    NAME            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    FUNCTION        reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    PRINT           reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    $end            reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    LPAREN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    NUMBER          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RBRACE          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RPAREN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)
    RETURN          reduce using rule 21 (statement -> NAME EQUAL expression SEMI .)


state 56

    (14) statement -> FUNCTION NAME LPAREN RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 80


state 57

    (15) statement -> FUNCTION NAME LPAREN parameters_function . RPAREN LBRACE bloc return_statement RBRACE SEMI

    RPAREN          shift and go to state 81


state 58

    (22) statement -> PRINT LPAREN expression_print RPAREN . SEMI

    SEMI            shift and go to state 82


state 59

    (23) expression_print -> expression COMMA . expression_print
    (23) expression_print -> . expression COMMA expression_print
    (24) expression_print -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 35
    expression_print               shift and go to state 83

state 60

    (34) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 34 (expression -> LPAREN expression RPAREN .)


state 61

    (4) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE . bloc RBRACE condition
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 84
    statement                      shift and go to state 3

state 62

    (25) expression -> expression PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 25 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    OR              reduce using rule 25 (expression -> expression PLUS expression .)
    AND             reduce using rule 25 (expression -> expression PLUS expression .)
    INF             reduce using rule 25 (expression -> expression PLUS expression .)
    SUP             reduce using rule 25 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 25 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 25 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 25 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 46 ]


state 63

    (26) expression -> expression MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 26 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    OR              reduce using rule 26 (expression -> expression MINUS expression .)
    AND             reduce using rule 26 (expression -> expression MINUS expression .)
    INF             reduce using rule 26 (expression -> expression MINUS expression .)
    SUP             reduce using rule 26 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 26 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 26 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 26 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 46 ]


state 64

    (27) expression -> expression TIMES expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 27 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 27 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 27 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 27 (expression -> expression TIMES expression .)
    OR              reduce using rule 27 (expression -> expression TIMES expression .)
    AND             reduce using rule 27 (expression -> expression TIMES expression .)
    INF             reduce using rule 27 (expression -> expression TIMES expression .)
    SUP             reduce using rule 27 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 27 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 27 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 27 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 27 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]


state 65

    (28) expression -> expression OR expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 28 (expression -> expression OR expression .)
    OR              reduce using rule 28 (expression -> expression OR expression .)
    AND             reduce using rule 28 (expression -> expression OR expression .)
    EQUALS          reduce using rule 28 (expression -> expression OR expression .)
    COMMA           reduce using rule 28 (expression -> expression OR expression .)
    SEMI            reduce using rule 28 (expression -> expression OR expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 66

    (29) expression -> expression AND expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    OR              reduce using rule 29 (expression -> expression AND expression .)
    AND             reduce using rule 29 (expression -> expression AND expression .)
    EQUALS          reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    SEMI            reduce using rule 29 (expression -> expression AND expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 67

    (30) expression -> expression INF expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 30 (expression -> expression INF expression .)
    OR              reduce using rule 30 (expression -> expression INF expression .)
    AND             reduce using rule 30 (expression -> expression INF expression .)
    EQUALS          reduce using rule 30 (expression -> expression INF expression .)
    COMMA           reduce using rule 30 (expression -> expression INF expression .)
    SEMI            reduce using rule 30 (expression -> expression INF expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45
    INF             shift and go to state 43
    SUP             shift and go to state 44

  ! PLUS            [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression INF expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 68

    (35) expression -> expression INF NAME . INF expression
    (39) expression -> NAME .

  ! shift/reduce conflict for INF resolved as shift
    INF             shift and go to state 85
    PLUS            reduce using rule 39 (expression -> NAME .)
    MINUS           reduce using rule 39 (expression -> NAME .)
    TIMES           reduce using rule 39 (expression -> NAME .)
    OR              reduce using rule 39 (expression -> NAME .)
    AND             reduce using rule 39 (expression -> NAME .)
    SUP             reduce using rule 39 (expression -> NAME .)
    DIVIDE          reduce using rule 39 (expression -> NAME .)
    EQUALS          reduce using rule 39 (expression -> NAME .)
    RPAREN          reduce using rule 39 (expression -> NAME .)
    COMMA           reduce using rule 39 (expression -> NAME .)
    SEMI            reduce using rule 39 (expression -> NAME .)

  ! INF             [ reduce using rule 39 (expression -> NAME .) ]


state 69

    (31) expression -> expression SUP expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 31 (expression -> expression SUP expression .)
    OR              reduce using rule 31 (expression -> expression SUP expression .)
    AND             reduce using rule 31 (expression -> expression SUP expression .)
    EQUALS          reduce using rule 31 (expression -> expression SUP expression .)
    COMMA           reduce using rule 31 (expression -> expression SUP expression .)
    SEMI            reduce using rule 31 (expression -> expression SUP expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45
    INF             shift and go to state 43
    SUP             shift and go to state 44

  ! PLUS            [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression SUP expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 70

    (36) expression -> expression SUP NAME . SUP expression
    (39) expression -> NAME .

  ! shift/reduce conflict for SUP resolved as shift
    SUP             shift and go to state 86
    PLUS            reduce using rule 39 (expression -> NAME .)
    MINUS           reduce using rule 39 (expression -> NAME .)
    TIMES           reduce using rule 39 (expression -> NAME .)
    OR              reduce using rule 39 (expression -> NAME .)
    AND             reduce using rule 39 (expression -> NAME .)
    INF             reduce using rule 39 (expression -> NAME .)
    DIVIDE          reduce using rule 39 (expression -> NAME .)
    EQUALS          reduce using rule 39 (expression -> NAME .)
    RPAREN          reduce using rule 39 (expression -> NAME .)
    COMMA           reduce using rule 39 (expression -> NAME .)
    SEMI            reduce using rule 39 (expression -> NAME .)

  ! SUP             [ reduce using rule 39 (expression -> NAME .) ]


state 71

    (32) expression -> expression DIVIDE expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 32 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 32 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 32 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 32 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]


state 72

    (33) expression -> expression EQUALS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 33 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 33 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 33 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46

  ! PLUS            [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]


state 73

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 87
    statement                      shift and go to state 3

state 74

    (8) statement -> FOR LPAREN statement expression SEMI . expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> FOR LPAREN statement expression SEMI . statement RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 90
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 88
    expression                     shift and go to state 89

state 75

    (17) parameters_function -> NAME COMMA . parameters_function
    (17) parameters_function -> . NAME COMMA parameters_function
    (18) parameters_function -> . NAME

    NAME            shift and go to state 49

    parameters_function            shift and go to state 91

state 76

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 92
    statement                      shift and go to state 3

state 77

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 93


state 78

    (13) statement -> NAME LPAREN parameters RPAREN SEMI .

    IF              reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    VOID            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NAME            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RBRACE          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> NAME LPAREN parameters RPAREN SEMI .)


state 79

    (19) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 19 (parameters -> expression COMMA parameters .)


state 80

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 94
    statement                      shift and go to state 3

state 81

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN . LBRACE bloc return_statement RBRACE SEMI

    LBRACE          shift and go to state 95


state 82

    (22) statement -> PRINT LPAREN expression_print RPAREN SEMI .

    IF              reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    WHILE           reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FOR             reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    VOID            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NAME            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    FUNCTION        reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    PRINT           reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    $end            reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    LPAREN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    NUMBER          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RBRACE          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RPAREN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)
    RETURN          reduce using rule 22 (statement -> PRINT LPAREN expression_print RPAREN SEMI .)


state 83

    (23) expression_print -> expression COMMA expression_print .

    RPAREN          reduce using rule 23 (expression_print -> expression COMMA expression_print .)


state 84

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc . RBRACE condition
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 96
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 85

    (35) expression -> expression INF NAME INF . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 97

state 86

    (36) expression -> expression SUP NAME SUP . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 98

state 87

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 99
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 88

    (9) statement -> FOR LPAREN statement expression SEMI statement . RPAREN LBRACE bloc RBRACE SEMI

    RPAREN          shift and go to state 100


state 89

    (8) statement -> FOR LPAREN statement expression SEMI expression . RPAREN LBRACE bloc RBRACE SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 90

    (39) expression -> NAME .
    (12) statement -> NAME . LPAREN RPAREN SEMI
    (13) statement -> NAME . LPAREN parameters RPAREN SEMI
    (21) statement -> NAME . EQUAL expression SEMI
    (37) statement -> NAME . PLUSPLUS SEMI

    RPAREN          reduce using rule 39 (expression -> NAME .)
    PLUS            reduce using rule 39 (expression -> NAME .)
    MINUS           reduce using rule 39 (expression -> NAME .)
    TIMES           reduce using rule 39 (expression -> NAME .)
    OR              reduce using rule 39 (expression -> NAME .)
    AND             reduce using rule 39 (expression -> NAME .)
    INF             reduce using rule 39 (expression -> NAME .)
    SUP             reduce using rule 39 (expression -> NAME .)
    DIVIDE          reduce using rule 39 (expression -> NAME .)
    EQUALS          reduce using rule 39 (expression -> NAME .)
    LPAREN          shift and go to state 16
    EQUAL           shift and go to state 17
    PLUSPLUS        shift and go to state 18


state 91

    (17) parameters_function -> NAME COMMA parameters_function .

    RPAREN          reduce using rule 17 (parameters_function -> NAME COMMA parameters_function .)


state 92

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 102
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 93

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 103
    statement                      shift and go to state 3

state 94

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RETURN          shift and go to state 105
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 104
    statement                      shift and go to state 11

state 95

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE . bloc return_statement RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 106
    statement                      shift and go to state 3

state 96

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI
    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE . condition
    (6) condition -> . ELSE LBRACE bloc RBRACE SEMI

    SEMI            shift and go to state 107
    ELSE            shift and go to state 109

    condition                      shift and go to state 108

state 97

    (35) expression -> expression INF NAME INF expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 35 (expression -> expression INF NAME INF expression .)
    OR              reduce using rule 35 (expression -> expression INF NAME INF expression .)
    AND             reduce using rule 35 (expression -> expression INF NAME INF expression .)
    EQUALS          reduce using rule 35 (expression -> expression INF NAME INF expression .)
    COMMA           reduce using rule 35 (expression -> expression INF NAME INF expression .)
    SEMI            reduce using rule 35 (expression -> expression INF NAME INF expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45
    INF             shift and go to state 43
    SUP             shift and go to state 44

  ! PLUS            [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! INF             [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! SUP             [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INF NAME INF expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 98

    (36) expression -> expression SUP NAME SUP expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    RPAREN          reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    OR              reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    AND             reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    EQUALS          reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    COMMA           reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    SEMI            reduce using rule 36 (expression -> expression SUP NAME SUP expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 45
    INF             shift and go to state 43
    SUP             shift and go to state 44

  ! PLUS            [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! INF             [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! SUP             [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUP NAME SUP expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! EQUALS          [ shift and go to state 46 ]


state 99

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 110


state 100

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 111


state 101

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 112


state 102

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 113


state 103

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 114
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 104

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 115


state 105

    (16) return_statement -> RETURN . expression SEMI
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression INF expression
    (31) expression -> . expression SUP expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . expression INF NAME INF expression
    (36) expression -> . expression SUP NAME SUP expression
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 24
    NAME            shift and go to state 23

    expression                     shift and go to state 116

state 106

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc . return_statement RBRACE SEMI
    (2) bloc -> bloc . statement
    (16) return_statement -> . RETURN expression SEMI
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RETURN          shift and go to state 105
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    return_statement               shift and go to state 117
    statement                      shift and go to state 11

state 107

    (4) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 108

    (5) statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .

    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    VOID            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NAME            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    FUNCTION        reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    $end            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)
    RETURN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition .)


state 109

    (6) condition -> ELSE . LBRACE bloc RBRACE SEMI

    LBRACE          shift and go to state 118


state 110

    (7) statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI .)


state 111

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 119

state 112

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 120

state 113

    (10) statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 10 (statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI .)


state 114

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 121


state 115

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 122


state 116

    (16) return_statement -> RETURN expression . SEMI
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . INF expression
    (31) expression -> expression . SUP expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EQUALS expression
    (35) expression -> expression . INF NAME INF expression
    (36) expression -> expression . SUP NAME SUP expression

    SEMI            shift and go to state 123
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    DIVIDE          shift and go to state 45
    EQUALS          shift and go to state 46


state 117

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement . RBRACE SEMI

    RBRACE          shift and go to state 124


state 118

    (6) condition -> ELSE LBRACE . bloc RBRACE SEMI
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    bloc                           shift and go to state 125
    statement                      shift and go to state 3

state 119

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 126
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 120

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 127
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 121

    (11) statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 11 (statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI .)


state 122

    (14) statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .

    IF              reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    $end            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 123

    (16) return_statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 16 (return_statement -> RETURN expression SEMI .)


state 124

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE . SEMI

    SEMI            shift and go to state 128


state 125

    (6) condition -> ELSE LBRACE bloc . RBRACE SEMI
    (2) bloc -> bloc . statement
    (4) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (5) statement -> . IF LPAREN expression RPAREN LBRACE bloc RBRACE condition
    (7) statement -> . WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI
    (8) statement -> . FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI
    (9) statement -> . FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI
    (10) statement -> . VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI
    (11) statement -> . VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI
    (12) statement -> . NAME LPAREN RPAREN SEMI
    (13) statement -> . NAME LPAREN parameters RPAREN SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI
    (15) statement -> . FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI
    (21) statement -> . NAME EQUAL expression SEMI
    (22) statement -> . PRINT LPAREN expression_print RPAREN SEMI
    (37) statement -> . NAME PLUSPLUS SEMI

    RBRACE          shift and go to state 129
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    VOID            shift and go to state 7
    NAME            shift and go to state 8
    FUNCTION        shift and go to state 9
    PRINT           shift and go to state 10

    statement                      shift and go to state 11

state 126

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 130


state 127

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 131


state 128

    (15) statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .

    IF              reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    WHILE           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FOR             reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    VOID            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NAME            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    FUNCTION        reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    PRINT           reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    $end            reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    LPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    NUMBER          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RBRACE          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RPAREN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)
    RETURN          reduce using rule 15 (statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI .)


state 129

    (6) condition -> ELSE LBRACE bloc RBRACE . SEMI

    SEMI            shift and go to state 132


state 130

    (9) statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 9 (statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI .)


state 131

    (8) statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 8 (statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI .)


state 132

    (6) condition -> ELSE LBRACE bloc RBRACE SEMI .

    IF              reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    WHILE           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FOR             reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    VOID            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NAME            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    FUNCTION        reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    PRINT           reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    $end            reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    LPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    NUMBER          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RBRACE          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RPAREN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)
    RETURN          reduce using rule 6 (condition -> ELSE LBRACE bloc RBRACE SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INF in state 68 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for INF in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
