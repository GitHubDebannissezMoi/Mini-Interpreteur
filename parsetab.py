
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocSUPINFleftPLUSMINUSleftTIMESDIVIDEleftPLUSPLUSAND COMMA DIVIDE ELSE EQUAL EQUALS FOR FUNCTION IF INF LBRACE LPAREN MINUS NAME NUMBER OR PLUS PLUSPLUS PRINT RBRACE RETURN RPAREN SEMI SUP TIMES VOID WHILE start : blocbloc : bloc statement\n            | statementstatement : IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI\n    | IF LPAREN expression RPAREN LBRACE bloc RBRACE conditioncondition : ELSE LBRACE bloc RBRACE SEMIstatement : WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMIstatement : FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI\n    | FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMIstatement : VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI\n    | VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMIstatement : NAME LPAREN RPAREN SEMI\n    | NAME LPAREN parameters RPAREN SEMIstatement : FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI\n    | FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMIreturn_statement : RETURN expression SEMIparameters_function : NAME COMMA parameters_function\n    | NAMEparameters : expression COMMA parameters\n    | expressionstatement : NAME EQUAL expression SEMIstatement : PRINT LPAREN expression_print RPAREN SEMIexpression_print : expression COMMA expression_print\n    | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression INF expression\n                  | expression SUP expression\n                  | expression DIVIDE expression\n                  | expression EQUALS expressionexpression : LPAREN expression RPARENexpression : expression INF NAME INF expression\n    | expression SUP NAME SUP expressionstatement : NAME PLUSPLUS SEMIexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'IF':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[4,4,-3,-2,4,-37,-12,-21,4,4,4,4,-13,4,-22,4,4,4,4,4,4,4,4,-4,-5,-7,4,4,-10,4,4,4,-11,-14,4,-15,-9,-8,-6,]),'WHILE':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[5,5,-3,-2,5,-37,-12,-21,5,5,5,5,-13,5,-22,5,5,5,5,5,5,5,5,-4,-5,-7,5,5,-10,5,5,5,-11,-14,5,-15,-9,-8,-6,]),'FOR':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[6,6,-3,-2,6,-37,-12,-21,6,6,6,6,-13,6,-22,6,6,6,6,6,6,6,6,-4,-5,-7,6,6,-10,6,6,6,-11,-14,6,-15,-9,-8,-6,]),'VOID':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[7,7,-3,-2,7,-37,-12,-21,7,7,7,7,-13,7,-22,7,7,7,7,7,7,7,7,-4,-5,-7,7,7,-10,7,7,7,-11,-14,7,-15,-9,-8,-6,]),'NAME':([0,2,3,7,9,11,12,13,14,16,17,20,21,26,27,32,33,38,39,40,41,42,43,44,45,46,52,54,55,59,61,73,74,75,76,78,80,82,84,85,86,87,92,93,94,95,103,105,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[8,8,-3,15,19,-2,23,23,8,23,23,23,23,23,49,-37,49,23,23,23,23,23,68,70,23,23,-12,23,-21,23,8,8,90,49,8,-13,8,-22,8,23,23,8,8,8,8,8,8,23,8,-4,-5,-7,8,8,-10,8,8,8,-11,-14,8,-15,-9,-8,-6,]),'FUNCTION':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[9,9,-3,-2,9,-37,-12,-21,9,9,9,9,-13,9,-22,9,9,9,9,9,9,9,9,-4,-5,-7,9,9,-10,9,9,9,-11,-14,9,-15,-9,-8,-6,]),'PRINT':([0,2,3,11,14,32,52,55,61,73,74,76,78,80,82,84,87,92,93,94,95,103,106,107,108,110,111,112,113,118,119,120,121,122,125,128,130,131,132,],[10,10,-3,-2,10,-37,-12,-21,10,10,10,10,-13,10,-22,10,10,10,10,10,10,10,10,-4,-5,-7,10,10,-10,10,10,10,-11,-14,10,-15,-9,-8,-6,]),'$end':([1,2,3,11,32,52,55,78,82,107,108,110,113,121,122,128,130,131,132,],[0,-1,-3,-2,-37,-12,-21,-13,-22,-4,-5,-7,-10,-11,-14,-15,-9,-8,-6,]),'RBRACE':([3,11,32,52,55,78,82,84,87,92,103,104,107,108,110,113,117,119,120,121,122,123,125,128,130,131,132,],[-3,-2,-37,-12,-21,-13,-22,96,99,102,114,115,-4,-5,-7,-10,124,126,127,-11,-14,-16,129,-15,-9,-8,-6,]),'RETURN':([3,11,32,52,55,78,82,94,106,107,108,110,113,121,122,128,130,131,132,],[-3,-2,-37,-12,-21,-13,-22,105,105,-4,-5,-7,-10,-11,-14,-15,-9,-8,-6,]),'LPAREN':([4,5,6,8,10,12,13,15,16,17,19,20,21,26,32,38,39,40,41,42,43,44,45,46,52,54,55,59,74,78,82,85,86,90,105,107,108,110,113,121,122,128,130,131,132,],[12,13,14,16,20,21,21,27,21,21,33,21,21,21,-37,21,21,21,21,21,21,21,21,21,-12,21,-21,21,21,-13,-22,21,21,16,21,-4,-5,-7,-10,-11,-14,-15,-9,-8,-6,]),'EQUAL':([8,90,],[17,17,]),'PLUSPLUS':([8,90,],[18,18,]),'NUMBER':([12,13,16,17,20,21,26,32,38,39,40,41,42,43,44,45,46,52,54,55,59,74,78,82,85,86,105,107,108,110,113,121,122,128,130,131,132,],[24,24,24,24,24,24,24,-37,24,24,24,24,24,24,24,24,24,-12,24,-21,24,24,-13,-22,24,24,24,-4,-5,-7,-10,-11,-14,-15,-9,-8,-6,]),'RPAREN':([16,22,23,24,25,27,29,30,32,33,34,35,36,49,51,52,55,57,60,62,63,64,65,66,67,68,69,70,71,72,78,79,82,83,88,89,90,91,97,98,107,108,110,113,121,122,128,130,131,132,],[28,37,-39,-38,47,50,53,-20,-37,56,58,-24,60,-18,77,-12,-21,81,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,-33,-13,-19,-22,-23,100,101,-39,-17,-35,-36,-4,-5,-7,-10,-11,-14,-15,-9,-8,-6,]),'SEMI':([18,23,24,28,31,48,53,58,60,62,63,64,65,66,67,68,69,70,71,72,96,97,98,99,102,114,115,116,124,126,127,129,],[32,-39,-38,52,55,74,78,82,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,-33,107,-35,-36,110,113,121,122,123,128,130,131,132,]),'PLUS':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[38,-39,-38,38,38,38,38,38,38,-34,-25,-26,-27,38,38,38,-39,38,-39,-32,38,38,-39,38,38,38,]),'MINUS':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[39,-39,-38,39,39,39,39,39,39,-34,-25,-26,-27,39,39,39,-39,39,-39,-32,39,39,-39,39,39,39,]),'TIMES':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[40,-39,-38,40,40,40,40,40,40,-34,40,40,-27,40,40,40,-39,40,-39,-32,40,40,-39,40,40,40,]),'OR':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[41,-39,-38,41,41,41,41,41,41,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,41,41,-39,-35,-36,41,]),'AND':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[42,-39,-38,42,42,42,42,42,42,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,42,42,-39,-35,-36,42,]),'INF':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[43,-39,-38,43,43,43,43,43,43,-34,-25,-26,-27,43,43,43,85,43,-39,-32,43,43,-39,43,43,43,]),'SUP':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[44,-39,-38,44,44,44,44,44,44,-34,-25,-26,-27,44,44,44,-39,44,86,-32,44,44,-39,44,44,44,]),'DIVIDE':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[45,-39,-38,45,45,45,45,45,45,-34,45,45,-27,45,45,45,-39,45,-39,-32,45,45,-39,45,45,45,]),'EQUALS':([22,23,24,25,30,31,35,36,48,60,62,63,64,65,66,67,68,69,70,71,72,89,90,97,98,116,],[46,-39,-38,46,46,46,46,46,46,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,46,46,-39,-35,-36,46,]),'COMMA':([23,24,30,35,49,60,62,63,64,65,66,67,68,69,70,71,72,97,98,],[-39,-38,54,59,75,-34,-25,-26,-27,-28,-29,-30,-39,-31,-39,-32,-33,-35,-36,]),'LBRACE':([37,47,50,56,77,81,100,101,109,],[61,73,76,80,93,95,111,112,118,]),'ELSE':([96,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,61,73,76,80,93,95,111,112,118,],[2,84,87,92,94,103,106,119,120,125,]),'statement':([0,2,14,61,73,74,76,80,84,87,92,93,94,95,103,106,111,112,118,119,120,125,],[3,11,26,3,3,88,3,3,11,11,11,3,11,3,11,11,3,3,3,11,11,11,]),'expression':([12,13,16,17,20,21,26,38,39,40,41,42,43,44,45,46,54,59,74,85,86,105,],[22,25,30,31,35,36,48,62,63,64,65,66,67,69,71,72,30,35,89,97,98,116,]),'parameters':([16,54,],[29,79,]),'expression_print':([20,59,],[34,83,]),'parameters_function':([27,33,75,],[51,57,91,]),'return_statement':([94,106,],[104,117,]),'condition':([96,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',85),
  ('bloc -> bloc statement','bloc',2,'p_line','calcBase.py',158),
  ('bloc -> statement','bloc',1,'p_line','calcBase.py',159),
  ('statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE SEMI','statement',8,'p_if','calcBase.py',166),
  ('statement -> IF LPAREN expression RPAREN LBRACE bloc RBRACE condition','statement',8,'p_if','calcBase.py',167),
  ('condition -> ELSE LBRACE bloc RBRACE SEMI','condition',5,'p_else','calcBase.py',172),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE bloc RBRACE SEMI','statement',8,'p_while','calcBase.py',176),
  ('statement -> FOR LPAREN statement expression SEMI expression RPAREN LBRACE bloc RBRACE SEMI','statement',11,'p_for','calcBase.py',180),
  ('statement -> FOR LPAREN statement expression SEMI statement RPAREN LBRACE bloc RBRACE SEMI','statement',11,'p_for','calcBase.py',181),
  ('statement -> VOID NAME LPAREN RPAREN LBRACE bloc RBRACE SEMI','statement',8,'p_statement_void_declaration','calcBase.py',185),
  ('statement -> VOID NAME LPAREN parameters_function RPAREN LBRACE bloc RBRACE SEMI','statement',9,'p_statement_void_declaration','calcBase.py',186),
  ('statement -> NAME LPAREN RPAREN SEMI','statement',4,'p_statement_functions_call','calcBase.py',195),
  ('statement -> NAME LPAREN parameters RPAREN SEMI','statement',5,'p_statement_functions_call','calcBase.py',196),
  ('statement -> FUNCTION NAME LPAREN RPAREN LBRACE bloc return_statement RBRACE SEMI','statement',9,'p_statement_function_declaration','calcBase.py',210),
  ('statement -> FUNCTION NAME LPAREN parameters_function RPAREN LBRACE bloc return_statement RBRACE SEMI','statement',10,'p_statement_function_declaration','calcBase.py',211),
  ('return_statement -> RETURN expression SEMI','return_statement',3,'p_return_statement_function','calcBase.py',220),
  ('parameters_function -> NAME COMMA parameters_function','parameters_function',3,'p_parameters_function','calcBase.py',224),
  ('parameters_function -> NAME','parameters_function',1,'p_parameters_function','calcBase.py',225),
  ('parameters -> expression COMMA parameters','parameters',3,'p_parameters','calcBase.py',230),
  ('parameters -> expression','parameters',1,'p_parameters','calcBase.py',231),
  ('statement -> NAME EQUAL expression SEMI','statement',4,'p_statement_assign','calcBase.py',236),
  ('statement -> PRINT LPAREN expression_print RPAREN SEMI','statement',5,'p_statement_print','calcBase.py',240),
  ('expression_print -> expression COMMA expression_print','expression_print',3,'p_expression_print','calcBase.py',244),
  ('expression_print -> expression','expression_print',1,'p_expression_print','calcBase.py',245),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcBase.py',250),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcBase.py',251),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcBase.py',252),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','calcBase.py',253),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','calcBase.py',254),
  ('expression -> expression INF expression','expression',3,'p_expression_binop','calcBase.py',255),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcBase.py',256),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcBase.py',257),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','calcBase.py',258),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',262),
  ('expression -> expression INF NAME INF expression','expression',5,'p_expression_compare_variable','calcBase.py',266),
  ('expression -> expression SUP NAME SUP expression','expression',5,'p_expression_compare_variable','calcBase.py',267),
  ('statement -> NAME PLUSPLUS SEMI','statement',3,'p_expression_increment','calcBase.py',272),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',277),
  ('expression -> NAME','expression',1,'p_expression_name','calcBase.py',281),
]
